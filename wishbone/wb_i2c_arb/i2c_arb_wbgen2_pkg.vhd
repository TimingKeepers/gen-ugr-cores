---------------------------------------------------------------------------------------
-- Title          : Wishbone slave core for I2C WB Arbiter
---------------------------------------------------------------------------------------
-- File           : i2c_arb_wbgen2_pkg.vhd
-- Author         : auto-generated by wbgen2 from i2c_arbiter_wb.wb
-- Created        : Tue Jun  9 11:32:14 2015
-- Standard       : VHDL'87
---------------------------------------------------------------------------------------
-- THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE i2c_arbiter_wb.wb
-- DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!
---------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package i2c_arb_wbgen2_pkg is
 
    -- Output registers (WB slave -> user design)
    
    type t_i2c_arb_out_registers is record
      cr_bypass_mode_o                         : std_logic;
      cr_bypass_src_o                          : std_logic_vector(4 downto 0);
      end record;
    
    constant c_i2c_arb_out_registers_init_value: t_i2c_arb_out_registers := (
      cr_bypass_mode_o => '0',
      cr_bypass_src_o => (others => '0')
      );
    function f_x_to_zero (x:std_logic) return std_logic;
    function f_x_to_zero (x:std_logic_vector) return std_logic_vector;
end package;

package body i2c_arb_wbgen2_pkg is
function f_x_to_zero (x:std_logic) return std_logic is
begin
--if x = '1' then
--return '1';
--else
--return '0';
--end if;
return x;
end function;
function f_x_to_zero (x:std_logic_vector) return std_logic_vector is
variable tmp: std_logic_vector(x'length-1 downto 0);
begin
for i in 0 to x'length-1 loop
--if(x(i) = 'X' or x(i) = 'U') then
--tmp(i):= '0';
--else
tmp(i):=x(i);
--end if; 
end loop; 
return tmp;
end function;
end package body;
