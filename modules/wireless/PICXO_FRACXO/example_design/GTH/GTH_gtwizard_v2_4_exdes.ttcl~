<: setFileName "GTH_picxo_example_top" :>
<: setFileExtension ".vhd" :>
<: set ComponentName [getComponentNameString] :>
<: setOutputDirectory "./example_design/GTH" :>
------------------------------------------------------------------------------
--   ____  ____
--  /   /\/   /
-- /___/  \  /    Vendor: Xilinx
-- \   \   \/     Version : 2.4
--  \   \         Application : 7 Series FPGAs Transceivers Wizard 
--  /   /         Filename : gtwizard_v2_4_exdes.vhd
-- /___/   /\     Timestamp : Thu Aug 13 06:32:57 +0100 2015 Rev: 734:741
-- \   \  /  \ 
--  \___\/\___\
--
--
-- Module gtwizard_v2_4_exdes
-- Generated by Xilinx 7 Series FPGAs Transceivers Wizard
-- 
-- 
-- (c) Copyright 2010-2012 Xilinx, Inc. All rights reserved.
-- 
-- This file contains confidential and proprietary information
-- of Xilinx, Inc. and is protected under U.S. and
-- international copyright and other intellectual property
-- laws.
-- 
-- DISCLAIMER
-- This disclaimer is not a license and does not grant any
-- rights to the materials distributed herewith. Except as
-- otherwise provided in a valid license issued to you by
-- Xilinx, and to the maximum extent permitted by applicable
-- law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
-- WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
-- AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
-- BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
-- INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
-- (2) Xilinx shall not be liable (whether in contract or tort,
-- including negligence, or under any other theory of
-- liability) for any loss or damage of any kind or nature
-- related to, arising under or in connection with these
-- materials, including for any direct, or any indirect,
-- special, incidental, or consequential loss or damage
-- (including loss of data, profits, goodwill, or any type of
-- loss or damage suffered as a result of any action brought
-- by a third party) even if such damage or loss was
-- reasonably foreseeable or Xilinx had been advised of the
-- possibility of the same.
-- 
-- CRITICAL APPLICATIONS
-- Xilinx products are not designed or intended to be fail-
-- safe, or for use in any application requiring fail-safe
-- performance, such as life-support or safety devices or
-- systems, Class III medical devices, nuclear facilities,
-- applications related to the deployment of airbags, or any
-- other applications that could lead to death, personal
-- injury, or severe property or environmental damage
-- (individually and collectively, "Critical
-- Applications"). Customer assumes the sole risk and
-- liability of any use of Xilinx products in Critical
-- Applications, subject only to applicable laws and
-- regulations governing limitations on product liability.
-- 
-- THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
-- PART OF THIS FILE AT ALL TIMES. 


library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;

--***********************************Entity Declaration************************

entity VC709_gtwizard_v2_4_exdes is
generic
(
    num_GT                                  : integer   := 4;
    SI5324_REFCLK                           : integer   := 1;
    EXAMPLE_CONFIG_INDEPENDENT_LANES        : integer   := 1;
    EXAMPLE_LANE_WITH_START_CHAR            : integer   := 0;    -- specifies lane with unique start frame ch
    EXAMPLE_WORDS_IN_BRAM                   : integer   := 512;  -- specifies amount of data in BRAM
    EXAMPLE_SIM_GTRESET_SPEEDUP             : string    := "TRUE";    -- simulation setting for GT SecureIP model
    EXAMPLE_SIMULATION                      : integer   := 0;             -- Set to 1 for simulation
    EXAMPLE_USE_SCOPE                       : integer   := 1           -- Set to 1 to use Chipscope to drive resets
);
port
(
    gt0_rxoutclk_i_o                        : out   std_logic;
    gt0_txoutclk_i_o                        : out   std_logic;
    drpclk_in_i_o                           : out   std_logic;
--    Q0_CLK0_GTREFCLK_PAD_N_IN               : in   std_logic;
--    Q0_CLK0_GTREFCLK_PAD_P_IN               : in   std_logic;
    Q0_CLK1_GTREFCLK_PAD_N_IN               : in   std_logic;
    Q0_CLK1_GTREFCLK_PAD_P_IN               : in   std_logic;
    SYS_CLK_P                               : in   std_logic;
    SYS_CLK_N                               : in   std_logic;
    SYS_RESET_IN                            : in   std_logic; 
    QPLL_RESET_IN                           : in   std_logic;
    RXN_IN                                  : in   std_logic_vector(num_GT-1 downto 0);
    RXP_IN                                  : in   std_logic_vector(num_GT-1 downto 0);
    TXN_OUT                                 : out  std_logic_vector(num_GT-1 downto 0);
    TXP_OUT                                 : out  std_logic_vector(num_GT-1 downto 0);
----SI5324
    I2C_CLK                                 : inout  std_logic;
    I2C_DATA                                : inout  std_logic;    
    SI5324_LOL                                : out  std_logic;
    SI5324_RST_N                            : out  std_logic;
    UART_TX                                 : out  std_logic;
    UART_RX                                 : in  std_logic;
    CPU_RST                                 : in  std_logic;
    I2C_MUX_RESET_B                         : out std_logic;
----SFP+    
    SFP_TX_FAULT_IN                         : in   std_logic_vector(num_GT-1 downto 0);
    SFP_TX_DISABLE_OUT                      : out  std_logic_vector(num_GT-1 downto 0);
    SFP_MOD_DETECT_IN                       : in   std_logic_vector(num_GT-1 downto 0);
    SFP_RS0_OUT                             : out  std_logic_vector(num_GT-1 downto 0);
    SFP_RS1_OUT                             : out  std_logic_vector(num_GT-1 downto 0);
    SFP_LOS_IN                              : in   std_logic_vector(num_GT-1 downto 0);
----PI_VCXO Coefficients
    G1_i                                    : in  STD_LOGIC_VECTOR (4 downto 0) ;
    G2_i                                    : in  STD_LOGIC_VECTOR (4 downto 0) ;
    R_i                                     : in  STD_LOGIC_VECTOR (15 downto 0);
    V_i                                     : in  STD_LOGIC_VECTOR (15 downto 0);
    ce_dsp_rate_i                           : in  std_logic_vector (15 downto 0);
    acc_step_i                              : in  std_logic_vector (3 downto 0) ;
----Coefficients reserved              
    c_i                                     : in  STD_LOGIC_VECTOR (9 downto 0); 
    p_i                                     : in  STD_LOGIC_VECTOR (9 downto 0); 
    n_i                                     : in  STD_LOGIC_VECTOR (9 downto 0); 
    DON_I                                   : in  std_logic_vector (0 downto 0);     
----Offset, hold                          
    Offset_ppm_i                            : in  std_logic_vector (21 downto 0);
    Offset_en_i                             : in  std_logic                     ;
    hold_i                                  : in  std_logic                     ;
    rsigce_i                                : in  STD_LOGIC                     ;
    vsigce_i                                : in  STD_LOGIC                     
);


end VC709_gtwizard_v2_4_exdes;
    
architecture RTL of VC709_gtwizard_v2_4_exdes is
    attribute CORE_GENERATION_INFO : string;
    attribute CORE_GENERATION_INFO of RTL : architecture is "gtwizard_v2_4,gtwizard_v2_4,{protocol_file=Start_from_scratch}";

--**************************Component Declarations*****************************

component gtwizard_v2_4_init
generic
(
    -- Simulation attributes
    EXAMPLE_SIM_GTRESET_SPEEDUP    : string    := "FALSE";    -- Set to 1 to speed up sim reset
    EXAMPLE_SIMULATION             : integer   := 0;          -- Set to 1 for simulation
    EXAMPLE_USE_CHIPSCOPE          : integer   := 1           -- Set to 1 to use Chipscope to drive resets
);
port
(
    SYSCLK_IN                               : in   std_logic;
    SOFT_RESET_IN                           : in   std_logic;
    GT0_TX_FSM_RESET_DONE_OUT               : out  std_logic;
    GT0_RX_FSM_RESET_DONE_OUT               : out  std_logic;
    GT0_DATA_VALID_IN                       : in   std_logic;
    GT1_TX_FSM_RESET_DONE_OUT               : out  std_logic;
    GT1_RX_FSM_RESET_DONE_OUT               : out  std_logic;
    GT1_DATA_VALID_IN                       : in   std_logic;
    GT2_TX_FSM_RESET_DONE_OUT               : out  std_logic;
    GT2_RX_FSM_RESET_DONE_OUT               : out  std_logic;
    GT2_DATA_VALID_IN                       : in   std_logic;
    GT3_TX_FSM_RESET_DONE_OUT               : out  std_logic;
    GT3_RX_FSM_RESET_DONE_OUT               : out  std_logic;
    GT3_DATA_VALID_IN                       : in   std_logic;
    --_________________________________________________________________________
    --GT0  (X0Y0)
    --____________________________CHANNEL PORTS________________________________
    ----------------------------- PCI Express Ports ----------------------------
    GT0_RXRATE_IN                           : in   std_logic_vector(2 downto 0);
    --------------------- RX Initialization and Reset Ports --------------------
    GT0_RXUSERRDY_IN                        : in   std_logic;
    -------------------------- RX Margin Analysis Ports ------------------------
    GT0_EYESCANDATAERROR_OUT                : out  std_logic;
    ------------------------- Receive Ports - CDR Ports ------------------------
    GT0_RXCDRLOCK_OUT                       : out  std_logic;
    ------------------ Receive Ports - FPGA RX Interface Ports -----------------
    GT0_RXUSRCLK_IN                         : in   std_logic;
    GT0_RXUSRCLK2_IN                        : in   std_logic;
    ------------------ Receive Ports - FPGA RX interface Ports -----------------
    GT0_RXDATA_OUT                          : out  std_logic_vector(39 downto 0);
    ------------------------ Receive Ports - RX AFE Ports ----------------------
    GT0_GTHRXN_IN                           : in   std_logic;
    --------------------- Receive Ports - RX Equalizer Ports -------------------
    GT0_RXMONITOROUT_OUT                    : out  std_logic_vector(6 downto 0);
    GT0_RXMONITORSEL_IN                     : in   std_logic_vector(1 downto 0);
    ------------ Receive Ports - RX Fabric ClocK Output Control Ports ----------
    GT0_RXRATEDONE_OUT                      : out  std_logic;
    --------------- Receive Ports - RX Fabric Output Control Ports -------------
    GT0_RXOUTCLK_OUT                        : out  std_logic;
    ---------------------- Receive Ports - RX Gearbox Ports --------------------
    GT0_RXSLIDE_IN                          : in   std_logic;
    ------------- Receive Ports - RX Initialization and Reset Ports ------------
    GT0_GTRXRESET_IN                        : in   std_logic;
    ------------------------ Receive Ports -RX AFE Ports -----------------------
    GT0_GTHRXP_IN                           : in   std_logic;
    -------------- Receive Ports -RX Initialization and Reset Ports ------------
    GT0_RXRESETDONE_OUT                     : out  std_logic;
    ------------------------ TX Configurable Driver Ports ----------------------
    GT0_TXPOSTCURSOR_IN                     : in   std_logic_vector(4 downto 0);
    GT0_TXPRECURSOR_IN                      : in   std_logic_vector(4 downto 0);
    --------------------- TX Initialization and Reset Ports --------------------
    GT0_GTTXRESET_IN                        : in   std_logic;
    GT0_TXUSERRDY_IN                        : in   std_logic;
    ------------------ Transmit Ports - FPGA TX Interface Ports ----------------
    GT0_TXUSRCLK_IN                         : in   std_logic;
    GT0_TXUSRCLK2_IN                        : in   std_logic;
    --------------------- Transmit Ports - PCI Express Ports -------------------
    GT0_TXRATE_IN                           : in   std_logic_vector(2 downto 0);
    --------------- Transmit Ports - TX Configurable Driver Ports --------------
    GT0_TXDIFFCTRL_IN                       : in   std_logic_vector(3 downto 0);
    ------------------ Transmit Ports - TX Data Path interface -----------------
    GT0_TXDATA_IN                           : in   std_logic_vector(39 downto 0);
    ---------------- Transmit Ports - TX Driver and OOB signaling --------------
    GT0_GTHTXN_OUT                          : out  std_logic;
    GT0_GTHTXP_OUT                          : out  std_logic;
    ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    GT0_TXOUTCLK_OUT                        : out  std_logic;
    GT0_TXOUTCLKFABRIC_OUT                  : out  std_logic;
    GT0_TXOUTCLKPCS_OUT                     : out  std_logic;
    GT0_TXRATEDONE_OUT                      : out  std_logic;
    ------------- Transmit Ports - TX Initialization and Reset Ports -----------
    GT0_TXRESETDONE_OUT                     : out  std_logic;
     ---TXPI---
    GT0_TXPIPPMSTEPSIZE_IN                  : in   std_logic_vector(4 downto 0);
    --GT1 
    --____________________________CHANNEL PORTS________________________________
    ---------------------------- Channel - DRP Ports  --------------------------
    GT1_DRPADDR_IN                          : in   std_logic_vector(8 downto 0);
    GT1_DRPCLK_IN                           : in   std_logic;
    GT1_DRPDI_IN                            : in   std_logic_vector(15 downto 0);
    GT1_DRPDO_OUT                           : out  std_logic_vector(15 downto 0);
    GT1_DRPEN_IN                            : in   std_logic;
    GT1_DRPRDY_OUT                          : out  std_logic;
    GT1_DRPWE_IN                            : in   std_logic;
    ----------------------------- PCI Express Ports ----------------------------
    GT1_RXRATE_IN                           : in   std_logic_vector(2 downto 0);
    --------------------- RX Initialization and Reset Ports --------------------
    GT1_RXUSERRDY_IN                        : in   std_logic;
    -------------------------- RX Margin Analysis Ports ------------------------
    GT1_EYESCANDATAERROR_OUT                : out  std_logic;
    ------------------------- Receive Ports - CDR Ports ------------------------
    GT1_RXCDRLOCK_OUT                       : out  std_logic;
    --------------- Receive Ports - Comma Detection and Alignment --------------
    GT1_RXSLIDE_IN                          : in   std_logic;
    ------------------ Receive Ports - FPGA RX Interface Ports -----------------
    GT1_RXUSRCLK_IN                         : in   std_logic;
    GT1_RXUSRCLK2_IN                        : in   std_logic;
    ------------------ Receive Ports - FPGA RX interface Ports -----------------
    GT1_RXDATA_OUT                          : out  std_logic_vector(39 downto 0);
    ------------------------ Receive Ports - RX AFE Ports ----------------------
    GT1_GTHRXN_IN                           : in   std_logic;
    --------------------- Receive Ports - RX Equalizer Ports -------------------
    GT1_RXMONITOROUT_OUT                    : out  std_logic_vector(6 downto 0);
    GT1_RXMONITORSEL_IN                     : in   std_logic_vector(1 downto 0);
    ------------ Receive Ports - RX Fabric ClocK Output Control Ports ----------
    GT1_RXRATEDONE_OUT                      : out  std_logic;
    GT1_RXOUTCLK_OUT                        : out  std_logic;    
    ------------- Receive Ports - RX Initialization and Reset Ports ------------
    GT1_GTRXRESET_IN                        : in   std_logic;
    ------------------------ Receive Ports -RX AFE Ports -----------------------
    GT1_GTHRXP_IN                           : in   std_logic;
    -------------- Receive Ports -RX Initialization and Reset Ports ------------
    GT1_RXRESETDONE_OUT                     : out  std_logic;
    ------------------------ TX Configurable Driver Ports ----------------------
    GT1_TXPOSTCURSOR_IN                     : in   std_logic_vector(4 downto 0);
    GT1_TXPRECURSOR_IN                      : in   std_logic_vector(4 downto 0);
    --------------------- TX Initialization and Reset Ports --------------------
    GT1_GTTXRESET_IN                        : in   std_logic;
    GT1_TXUSERRDY_IN                        : in   std_logic;
    ------------------ Transmit Ports - FPGA TX Interface Ports ----------------
    GT1_TXUSRCLK_IN                         : in   std_logic;
    GT1_TXUSRCLK2_IN                        : in   std_logic;
    --------------------- Transmit Ports - PCI Express Ports -------------------
    GT1_TXRATE_IN                           : in   std_logic_vector(2 downto 0);
    --------------- Transmit Ports - TX Configurable Driver Ports --------------
    GT1_TXDIFFCTRL_IN                       : in   std_logic_vector(3 downto 0);
    ------------------ Transmit Ports - TX Data Path interface -----------------
    GT1_TXDATA_IN                           : in   std_logic_vector(39 downto 0);
    ---------------- Transmit Ports - TX Driver and OOB signaling --------------
    GT1_GTHTXN_OUT                          : out  std_logic;
    GT1_GTHTXP_OUT                          : out  std_logic;
    ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    GT1_TXOUTCLK_OUT                        : out  std_logic;
    GT1_TXOUTCLKFABRIC_OUT                  : out  std_logic;
    GT1_TXOUTCLKPCS_OUT                     : out  std_logic;
    GT1_TXRATEDONE_OUT                      : out  std_logic;
    ------------- Transmit Ports - TX Initialization and Reset Ports -----------
    GT1_TXRESETDONE_OUT                     : out  std_logic;
    GT1_TXPIPPMSTEPSIZE_IN                  : in   std_logic_vector(4 downto 0);
    --GT2  (X1Y34)
    --____________________________CHANNEL PORTS________________________________
    ---------------------------- Channel - DRP Ports  --------------------------
    GT2_DRPADDR_IN                          : in   std_logic_vector(8 downto 0);
    GT2_DRPCLK_IN                           : in   std_logic;
    GT2_DRPDI_IN                            : in   std_logic_vector(15 downto 0);
    GT2_DRPDO_OUT                           : out  std_logic_vector(15 downto 0);
    GT2_DRPEN_IN                            : in   std_logic;
    GT2_DRPRDY_OUT                          : out  std_logic;
    GT2_DRPWE_IN                            : in   std_logic;
    ----------------------------- PCI Express Ports ----------------------------
    GT2_RXRATE_IN                           : in   std_logic_vector(2 downto 0);
    --------------------- RX Initialization and Reset Ports --------------------
    GT2_RXUSERRDY_IN                        : in   std_logic;
    -------------------------- RX Margin Analysis Ports ------------------------
    GT2_EYESCANDATAERROR_OUT                : out  std_logic;
    ------------------------- Receive Ports - CDR Ports ------------------------
    GT2_RXCDRLOCK_OUT                       : out  std_logic;
    --------------- Receive Ports - Comma Detection and Alignment --------------
    GT2_RXSLIDE_IN                          : in   std_logic;
    ------------------ Receive Ports - FPGA RX Interface Ports -----------------
    GT2_RXUSRCLK_IN                         : in   std_logic;
    GT2_RXUSRCLK2_IN                        : in   std_logic;
    ------------------ Receive Ports - FPGA RX interface Ports -----------------
    GT2_RXDATA_OUT                          : out  std_logic_vector(39 downto 0);
    ------------------------ Receive Ports - RX AFE Ports ----------------------
    GT2_GTHRXN_IN                           : in   std_logic;
    --------------------- Receive Ports - RX Equalizer Ports -------------------
    GT2_RXMONITOROUT_OUT                    : out  std_logic_vector(6 downto 0);
    GT2_RXMONITORSEL_IN                     : in   std_logic_vector(1 downto 0);
    ------------ Receive Ports - RX Fabric ClocK Output Control Ports ----------
    GT2_RXRATEDONE_OUT                      : out  std_logic;
    GT2_RXOUTCLK_OUT                        : out  std_logic;    
    ------------- Receive Ports - RX Initialization and Reset Ports ------------
    GT2_GTRXRESET_IN                        : in   std_logic;
    ------------------------ Receive Ports -RX AFE Ports -----------------------
    GT2_GTHRXP_IN                           : in   std_logic;
    -------------- Receive Ports -RX Initialization and Reset Ports ------------
    GT2_RXRESETDONE_OUT                     : out  std_logic;
    ------------------------ TX Configurable Driver Ports ----------------------
    GT2_TXPOSTCURSOR_IN                     : in   std_logic_vector(4 downto 0);
    GT2_TXPRECURSOR_IN                      : in   std_logic_vector(4 downto 0);
    --------------------- TX Initialization and Reset Ports --------------------
    GT2_GTTXRESET_IN                        : in   std_logic;
    GT2_TXUSERRDY_IN                        : in   std_logic;
    ------------------ Transmit Ports - FPGA TX Interface Ports ----------------
    GT2_TXUSRCLK_IN                         : in   std_logic;
    GT2_TXUSRCLK2_IN                        : in   std_logic;
    --------------------- Transmit Ports - PCI Express Ports -------------------
    GT2_TXRATE_IN                           : in   std_logic_vector(2 downto 0);
    --------------- Transmit Ports - TX Configurable Driver Ports --------------
    GT2_TXDIFFCTRL_IN                       : in   std_logic_vector(3 downto 0);
    ------------------ Transmit Ports - TX Data Path interface -----------------
    GT2_TXDATA_IN                           : in   std_logic_vector(39 downto 0);
    ---------------- Transmit Ports - TX Driver and OOB signaling --------------
    GT2_GTHTXN_OUT                          : out  std_logic;
    GT2_GTHTXP_OUT                          : out  std_logic;
    ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    GT2_TXOUTCLK_OUT                        : out  std_logic;
    GT2_TXOUTCLKFABRIC_OUT                  : out  std_logic;
    GT2_TXOUTCLKPCS_OUT                     : out  std_logic;
    GT2_TXRATEDONE_OUT                      : out  std_logic;
    ------------- Transmit Ports - TX Initialization and Reset Ports -----------
    GT2_TXRESETDONE_OUT                     : out  std_logic;
    GT2_TXPIPPMSTEPSIZE_IN                  : in   std_logic_vector(4 downto 0);
    --GT3 
    --____________________________CHANNEL PORTS________________________________
    ---------------------------- Channel - DRP Ports  --------------------------
    GT3_DRPADDR_IN                          : in   std_logic_vector(8 downto 0);
    GT3_DRPCLK_IN                           : in   std_logic;
    GT3_DRPDI_IN                            : in   std_logic_vector(15 downto 0);
    GT3_DRPDO_OUT                           : out  std_logic_vector(15 downto 0);
    GT3_DRPEN_IN                            : in   std_logic;
    GT3_DRPRDY_OUT                          : out  std_logic;
    GT3_DRPWE_IN                            : in   std_logic;
    ----------------------------- PCI Express Ports ----------------------------
    GT3_RXRATE_IN                           : in   std_logic_vector(2 downto 0);
    --------------------- RX Initialization and Reset Ports --------------------
    GT3_RXUSERRDY_IN                        : in   std_logic;
    -------------------------- RX Margin Analysis Ports ------------------------
    GT3_EYESCANDATAERROR_OUT                : out  std_logic;
    ------------------------- Receive Ports - CDR Ports ------------------------
    GT3_RXCDRLOCK_OUT                       : out  std_logic;
    --------------- Receive Ports - Comma Detection and Alignment --------------
    GT3_RXSLIDE_IN                          : in   std_logic;
    ------------------ Receive Ports - FPGA RX Interface Ports -----------------
    GT3_RXUSRCLK_IN                         : in   std_logic;
    GT3_RXUSRCLK2_IN                        : in   std_logic;
    ------------------ Receive Ports - FPGA RX interface Ports -----------------
    GT3_RXDATA_OUT                          : out  std_logic_vector(39 downto 0);
    ------------------------ Receive Ports - RX AFE Ports ----------------------
    GT3_GTHRXN_IN                           : in   std_logic;
    --------------------- Receive Ports - RX Equalizer Ports -------------------
    GT3_RXMONITOROUT_OUT                    : out  std_logic_vector(6 downto 0);
    GT3_RXMONITORSEL_IN                     : in   std_logic_vector(1 downto 0);
    ------------ Receive Ports - RX Fabric ClocK Output Control Ports ----------
    GT3_RXRATEDONE_OUT                      : out  std_logic;
    GT3_RXOUTCLK_OUT                        : out  std_logic;    
    ------------- Receive Ports - RX Initialization and Reset Ports ------------
    GT3_GTRXRESET_IN                        : in   std_logic;
    ------------------------ Receive Ports -RX AFE Ports -----------------------
    GT3_GTHRXP_IN                           : in   std_logic;
    -------------- Receive Ports -RX Initialization and Reset Ports ------------
    GT3_RXRESETDONE_OUT                     : out  std_logic;
    ------------------------ TX Configurable Driver Ports ----------------------
    GT3_TXPOSTCURSOR_IN                     : in   std_logic_vector(4 downto 0);
    GT3_TXPRECURSOR_IN                      : in   std_logic_vector(4 downto 0);
    --------------------- TX Initialization and Reset Ports --------------------
    GT3_GTTXRESET_IN                        : in   std_logic;
    GT3_TXUSERRDY_IN                        : in   std_logic;
    ------------------ Transmit Ports - FPGA TX Interface Ports ----------------
    GT3_TXUSRCLK_IN                         : in   std_logic;
    GT3_TXUSRCLK2_IN                        : in   std_logic;
    --------------------- Transmit Ports - PCI Express Ports -------------------
    GT3_TXRATE_IN                           : in   std_logic_vector(2 downto 0);
    --------------- Transmit Ports - TX Configurable Driver Ports --------------
    GT3_TXDIFFCTRL_IN                       : in   std_logic_vector(3 downto 0);
    ------------------ Transmit Ports - TX Data Path interface -----------------
    GT3_TXDATA_IN                           : in   std_logic_vector(39 downto 0);
    ---------------- Transmit Ports - TX Driver and OOB signaling --------------
    GT3_GTHTXN_OUT                          : out  std_logic;
    GT3_GTHTXP_OUT                          : out  std_logic;
    ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    GT3_TXOUTCLK_OUT                        : out  std_logic;
    GT3_TXOUTCLKFABRIC_OUT                  : out  std_logic;
    GT3_TXOUTCLKPCS_OUT                     : out  std_logic;
    GT3_TXRATEDONE_OUT                      : out  std_logic;
    ------------- Transmit Ports - TX Initialization and Reset Ports -----------
    GT3_TXRESETDONE_OUT                     : out  std_logic;
    GT3_TXPIPPMSTEPSIZE_IN                  : in   std_logic_vector(4 downto 0);
    --____________________________COMMON PORTS________________________________
    ---------------------- Common Block  - Ref Clock Ports ---------------------
    GT0_GTREFCLK0_COMMON_IN                 : in   std_logic;
    ------------------------- Common Block - QPLL Ports ------------------------
    GT0_QPLLLOCK_OUT                        : out  std_logic;
    GT0_QPLLLOCKDETCLK_IN                   : in   std_logic;
    GT0_QPLLRESET_IN                        : in   std_logic


);
end component;


component gtwizard_v2_4_GT_USRCLK_SOURCE 
port
(
    Q0_CLK1_GTREFCLK_PAD_N_IN    : in   std_logic;
    Q0_CLK1_GTREFCLK_PAD_P_IN    : in   std_logic;
    Q0_CLK1_GTREFCLK_OUT         : out  std_logic;
 
    GT0_TXUSRCLK_OUT             : out std_logic;
    GT0_TXUSRCLK2_OUT            : out std_logic;
    GT0_TXOUTCLK_IN              : in  std_logic;
    GT0_RXUSRCLK_OUT             : out std_logic;
    GT0_RXUSRCLK2_OUT            : out std_logic;
 
    GT1_TXUSRCLK_OUT             : out std_logic;
    GT1_TXUSRCLK2_OUT            : out std_logic;
    GT1_TXOUTCLK_IN              : in  std_logic;
    GT1_RXUSRCLK_OUT             : out std_logic;
    GT1_RXUSRCLK2_OUT            : out std_logic;
 
    GT2_TXUSRCLK_OUT             : out std_logic;
    GT2_TXUSRCLK2_OUT            : out std_logic;
    GT2_TXOUTCLK_IN              : in  std_logic;
    GT2_RXUSRCLK_OUT             : out std_logic;
    GT2_RXUSRCLK2_OUT            : out std_logic;
 
    GT3_TXUSRCLK_OUT             : out std_logic;
    GT3_TXUSRCLK2_OUT            : out std_logic;
    GT3_TXOUTCLK_IN              : in  std_logic;
    GT3_RXUSRCLK_OUT             : out std_logic;
    GT3_RXUSRCLK2_OUT            : out std_logic;
    DRPCLK_IN                    : in  std_logic;
    DRPCLK_OUT                   : out std_logic
);
end component;

COMPONENT <=: $ComponentName :>
 Port (      
          --Reset signal
          reset_i           : in  STD_LOGIC                                                       ;
          --Reference clock for locking the VCXO, can be any clock (local, BUFG, clock enable...)
          ref_clk_i         : in  STD_LOGIC                            ;
          --DRP port to connect to GTX
          drpen_o           : out STD_LOGIC                            ;
          drpwen_o          : out STD_LOGIC                            ;
          drprdy_i          : in  STD_LOGIC                            ;
          drpdo_i           : in  STD_LOGIC_VECTOR (15 downto 0)       ;
          drpdata_o         : out STD_LOGIC_VECTOR (15 downto 0)       ;
          drpaddr_o         : out STD_LOGIC_VECTOR (8 downto 0)        ;
          drpbusy_o         : out STD_LOGIC                            ;
          --Clocks
          txoutclk_i        : in  std_logic                            ; 
          --phase detector clock enable, for future use
          rsigce_i          : in  STD_LOGIC                            ;
          vsigce_i          : in  STD_LOGIC                            ;
          vsigce_o          : out STD_LOGIC                            ;
          --Coefficients and divider values
          G1                : in  STD_LOGIC_VECTOR (4 downto 0)        ;
          G2                : in  STD_LOGIC_VECTOR (4 downto 0)        ;
          R                 : in  STD_LOGIC_VECTOR (15 downto 0)       ;
          V                 : in  STD_LOGIC_VECTOR (15 downto 0)       ;
          ce_dsp_rate       : in  std_logic_vector (15 downto 0)       ;
          acc_step          : in  std_logic_vector (3 downto 0)        ;
          --Offset, hold
          Offset_ppm        : in  std_logic_vector (21 downto 0)       ;
          Offset_en         : in  std_logic                            ;
          hold              : in  std_logic                            ;
          DON_I             : in  std_logic_vector (0 downto 0)        ;
          --Coefficients for future use
          C_i               : in  STD_LOGIC_VECTOR (6 downto 0);
          P_i               : in  STD_LOGIC_VECTOR (9 downto 0);
          N_i               : in  STD_LOGIC_VECTOR (9 downto 0)        ;
           --DRP user port
          drp_user_req_i    : in  STD_LOGIC                            ;
          drp_user_done_i   : in  STD_LOGIC                            ; 
          drpen_user_i      : in  STD_LOGIC                            ;
          drpwen_user_i     : in  STD_LOGIC                            ;
          drpaddr_user_i    : in  STD_LOGIC_VECTOR (8 downto 0)        ;
          drpdata_user_i    : in  STD_LOGIC_VECTOR (15 downto 0)       ;
          drpdata_user_o    : out STD_LOGIC_VECTOR (15 downto 0)       ;
          drprdy_user_o     : out STD_LOGIC                            ;
          --TXPI Port data
          acc_data          : out std_logic_vector (4 downto 0)        ;
          --Debug port
          error_o           : out std_logic_vector (20 downto 0)       ;
          volt_o            : out std_logic_vector (21 downto 0)       ;
          drpdata_short_o   : out std_logic_vector (7 downto 0)        ;
          ce_pi_o           : out std_logic                            ;
          ce_pi2_o          : out std_logic                            ;
          ce_dsp_o          : out std_logic                            ;                
          ovf_pd            : out std_logic                            ;                                          
          ovf_ab            : out std_logic                            ;
          ovf_volt          : out std_logic                            ;
          ovf_int           : out std_logic                                           
          );
END COMPONENT;



component data_vio
port(
     CLK : IN STD_LOGIC;
     PROBE_IN0 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
     PROBE_IN1 : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
     PROBE_OUT0 : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
     PROBE_OUT1 : OUT STD_LOGIC_VECTOR(31 DOWNTO 0)
 );
end component;

COMPONENT picxo_ila
  PORT (
    clk : IN STD_LOGIC;
    probe0 : IN STD_LOGIC_VECTOR(20 DOWNTO 0);
    probe1 : IN STD_LOGIC_VECTOR(21 DOWNTO 0);
    probe2 : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
    probe3 : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
    probe4 : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
    probe5 : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
    probe6 : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
    probe7 : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
    probe8 : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
    probe9 : IN STD_LOGIC_VECTOR(0 DOWNTO 0)
  );
END COMPONENT;


COMPONENT picxo_vio
  PORT (
    clk : IN STD_LOGIC;
    probe_out0 : OUT STD_LOGIC_VECTOR(4 DOWNTO 0);
    probe_out1 : OUT STD_LOGIC_VECTOR(4 DOWNTO 0);
    probe_out2 : OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
    probe_out3 : OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
    probe_out4 : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    probe_out5 : OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
    probe_out6 : OUT STD_LOGIC_VECTOR(21 DOWNTO 0);
    probe_out7 : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
    probe_out8 : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
    probe_out9 : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
    probe_out10 : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
    probe_out11 : OUT STD_LOGIC_VECTOR(0 DOWNTO 0)
  );
END COMPONENT;

component vc709_Si5324_ctrl is
  Port (uart_rx                     : in std_logic;
        uart_tx                     : out std_logic;
        i2c_clk                     : inout std_logic;
        i2c_data                    : inout std_logic;
        i2c_mux_reset_b             : out std_logic := '1';
        cpu_rst                     : in std_logic;
        clk200                      : in std_logic;
        si5324_freq_sel_ip          : in std_logic_vector(7 downto 0);  -- Input from chipscope that selects the frequency generated from the external Si5324 device with the following mapping: 
                                                                        -- 
                                                                        -- Bit 0 - 3   Selects frequency where "0000" = 155MHz, "0001" = 161MHz, "0010" =  167MHz, "0011" = 173MHz, "0100" = 174MHz 
                                                                        --             each frequency is setup through the tables defined in the picoblaze assembly code located in "chipscope_to_Si5324_bridge.psm" (e.g. TABLE Hex_Si5324_155M# )
                                                                        --             new frequencies can be added by adding more tables and decoding further values of bit 0 - 3. Picoblaze detects a change of state on these signals and
                                                                        --             automatically updates the Si5324 frequency when a change is detected.
                
         si5324_rst_n               : out std_logic);
  end component;

--***********************************Parameter Declarations********************

    constant DLY : time := 1 ns;

--************************** Register Declarations ****************************

    signal   gt0_txfsmresetdone_i            : std_logic;
    signal   gt0_rxfsmresetdone_i            : std_logic;
    signal   gt0_txfsmresetdone_r            : std_logic;
    signal   gt0_txfsmresetdone_r2           : std_logic;
    signal   gt0_rxresetdone_r               : std_logic;
    signal   gt0_rxresetdone_r2              : std_logic;
    signal   gt0_rxresetdone_r3              : std_logic;


    signal   gt1_txfsmresetdone_i            : std_logic;
    signal   gt1_rxfsmresetdone_i            : std_logic;
    signal   gt1_txfsmresetdone_r            : std_logic;
    signal   gt1_txfsmresetdone_r2           : std_logic;
    signal   gt1_rxresetdone_r               : std_logic;
    signal   gt1_rxresetdone_r2              : std_logic;
    signal   gt1_rxresetdone_r3              : std_logic;


    signal   gt2_txfsmresetdone_i            : std_logic;
    signal   gt2_rxfsmresetdone_i            : std_logic;
    signal   gt2_txfsmresetdone_r            : std_logic;
    signal   gt2_txfsmresetdone_r2           : std_logic;
    signal   gt2_rxresetdone_r               : std_logic;
    signal   gt2_rxresetdone_r2              : std_logic;
    signal   gt2_rxresetdone_r3              : std_logic;


    signal   gt3_txfsmresetdone_i            : std_logic;
    signal   gt3_rxfsmresetdone_i            : std_logic;
    signal   gt3_txfsmresetdone_r            : std_logic;
    signal   gt3_txfsmresetdone_r2           : std_logic;
    signal   gt3_rxresetdone_r               : std_logic;
    signal   gt3_rxresetdone_r2              : std_logic;
    signal   gt3_rxresetdone_r3              : std_logic;



--**************************** Wire Declarations ******************************
    -------------------------- GT Wrapper Wires ------------------------------
    --________________________________________________________________________
    --________________________________________________________________________
    --GT0 
    ----------------------------- PCI Express Ports ----------------------------
    signal  gt0_rxrate_i                    : std_logic_vector(2 downto 0);
    --------------------- RX Initialization and Reset Ports --------------------
    signal  gt0_rxuserrdy_i                 : std_logic;
    -------------------------- RX Margin Analysis Ports ------------------------
    signal  gt0_eyescandataerror_i          : std_logic;
    ------------------------- Receive Ports - CDR Ports ------------------------
    signal  gt0_rxcdrlock_i                 : std_logic;
    ------------------ Receive Ports - FPGA RX interface Ports -----------------
    signal  gt0_rxdata_i                    : std_logic_vector(39 downto 0);
    ------------------------ Receive Ports - RX AFE Ports ----------------------
    signal  gt0_gthrxn_i                    : std_logic;
    --------------------- Receive Ports - RX Equalizer Ports -------------------
    signal  gt0_rxmonitorout_i              : std_logic_vector(6 downto 0);
    signal  gt0_rxmonitorsel_i              : std_logic_vector(1 downto 0);
    ------------ Receive Ports - RX Fabric ClocK Output Control Ports ----------
    signal  gt0_rxratedone_i                : std_logic;
     --------------- Receive Ports - RX Fabric Output Control Ports -------------
    signal  gt0_rxoutclk_i                  : std_logic;
    signal  gt0_rxoutclk_bufg               : std_logic;
    ---------------------- Receive Ports - RX Gearbox Ports --------------------
    signal  gt0_rxslide_i                   : std_logic;
    ------------- Receive Ports - RX Initialization and Reset Ports ------------
    signal  gt0_gtrxreset_i                 : std_logic;
    ------------------------ Receive Ports -RX AFE Ports -----------------------
    signal  gt0_gthrxp_i                    : std_logic;
    -------------- Receive Ports -RX Initialization and Reset Ports ------------
    signal  gt0_rxresetdone_i               : std_logic;
     ------------------------ TX Configurable Driver Ports ----------------------
    signal  gt0_txpostcursor_i              : std_logic_vector(4 downto 0);
    signal  gt0_txprecursor_i               : std_logic_vector(4 downto 0);
    --------------------- TX Initialization and Reset Ports --------------------
    signal  gt0_gttxreset_i                 : std_logic;
    signal  gt0_txuserrdy_i                 : std_logic;
     --------------------- Transmit Ports - PCI Express Ports -------------------
    signal  gt0_txrate_i                    : std_logic_vector(2 downto 0);
     --------------- Transmit Ports - TX Configurable Driver Ports --------------
    signal  gt0_txdiffctrl_i                : std_logic_vector(3 downto 0);
    ------------------ Transmit Ports - TX Data Path interface -----------------
    signal  gt0_txdata_i                    : std_logic_vector(39 downto 0);
    ---------------- Transmit Ports - TX Driver and OOB signaling --------------
    signal  gt0_gthtxn_i                    : std_logic;
    signal  gt0_gthtxp_i                    : std_logic;
    ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    signal  gt0_txoutclk_i                  : std_logic;
    
    signal  gt0_txoutclk_i_nophase          : std_logic;
    signal  gt0_txoutclkfabric_i            : std_logic;
    signal  gt0_txoutclkpcs_i               : std_logic;
    signal  gt0_txratedone_i                : std_logic;
    ------------- Transmit Ports - TX Initialization and Reset Ports -----------
    signal  gt0_txresetdone_i               : std_logic;

    --________________________________________________________________________
    --________________________________________________________________________
    --GT1 

    ---------------------------- Channel - DRP Ports  --------------------------
    signal  gt1_drpaddr_i                   : std_logic_vector(8 downto 0);
    signal  gt1_drpdi_i                     : std_logic_vector(15 downto 0);
    signal  gt1_drpdo_i                     : std_logic_vector(15 downto 0);
    signal  gt1_drpen_i                     : std_logic;
    signal  gt1_drprdy_i                    : std_logic;
    signal  gt1_drpwe_i                     : std_logic;
    ----------------------------- PCI Express Ports ----------------------------
    signal  gt1_rxrate_i                    : std_logic_vector(2 downto 0);
    --------------------- RX Initialization and Reset Ports --------------------
    signal  gt1_rxuserrdy_i                 : std_logic;
    -------------------------- RX Margin Analysis Ports ------------------------
    signal  gt1_eyescandataerror_i          : std_logic;
    ------------------------- Receive Ports - CDR Ports ------------------------
    signal  gt1_rxcdrlock_i                 : std_logic;
    --------------- Receive Ports - Comma Detection and Alignment --------------
    signal  gt1_rxslide_i                   : std_logic;
    ------------------ Receive Ports - FPGA RX interface Ports -----------------
    signal  gt1_rxdata_i                    : std_logic_vector(39 downto 0);
    ------------------------ Receive Ports - RX AFE Ports ----------------------
    signal  gt1_gthrxn_i                    : std_logic;
    --------------------- Receive Ports - RX Equalizer Ports -------------------
    signal  gt1_rxmonitorout_i              : std_logic_vector(6 downto 0);
    signal  gt1_rxmonitorsel_i              : std_logic_vector(1 downto 0);
    ------------ Receive Ports - RX Fabric ClocK Output Control Ports ----------
    signal  gt1_rxratedone_i                : std_logic;
    --------------- Receive Ports - RX Fabric Output Control Ports -------------
    signal  gt1_rxoutclk_i                  : std_logic;
    signal  gt1_rxoutclk_bufg               : std_logic;
    ------------- Receive Ports - RX Initialization and Reset Ports ------------
    signal  gt1_gtrxreset_i                 : std_logic;
    ------------------------ Receive Ports -RX AFE Ports -----------------------
    signal  gt1_gthrxp_i                    : std_logic;
    -------------- Receive Ports -RX Initialization and Reset Ports ------------
    signal  gt1_rxresetdone_i               : std_logic;
    ------------------------ TX Configurable Driver Ports ----------------------
    signal  gt1_txpostcursor_i              : std_logic_vector(4 downto 0);
    signal  gt1_txprecursor_i               : std_logic_vector(4 downto 0);
    --------------------- TX Initialization and Reset Ports --------------------
    signal  gt1_gttxreset_i                 : std_logic;
    signal  gt1_txuserrdy_i                 : std_logic;
    --------------------- Transmit Ports - PCI Express Ports -------------------
    signal  gt1_txrate_i                    : std_logic_vector(2 downto 0);
    --------------- Transmit Ports - TX Configurable Driver Ports --------------
    signal  gt1_txdiffctrl_i                : std_logic_vector(3 downto 0);
    ------------------ Transmit Ports - TX Data Path interface -----------------
    signal  gt1_txdata_i                    : std_logic_vector(39 downto 0);
    ---------------- Transmit Ports - TX Driver and OOB signaling --------------
    signal  gt1_gthtxn_i                    : std_logic;
    signal  gt1_gthtxp_i                    : std_logic;
    ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    signal  gt1_txoutclk_i                  : std_logic;
    signal  gt1_txoutclkfabric_i            : std_logic;
    signal  gt1_txoutclkpcs_i               : std_logic;
    signal  gt1_txratedone_i                : std_logic;
    ------------- Transmit Ports - TX Initialization and Reset Ports -----------
    signal  gt1_txresetdone_i               : std_logic;


    --________________________________________________________________________
    --________________________________________________________________________
    --GT2   

    ---------------------------- Channel - DRP Ports  --------------------------
    signal  gt2_drpaddr_i                   : std_logic_vector(8 downto 0);
    signal  gt2_drpdi_i                     : std_logic_vector(15 downto 0);
    signal  gt2_drpdo_i                     : std_logic_vector(15 downto 0);
    signal  gt2_drpen_i                     : std_logic;
    signal  gt2_drprdy_i                    : std_logic;
    signal  gt2_drpwe_i                     : std_logic;
    ----------------------------- PCI Express Ports ----------------------------
    signal  gt2_rxrate_i                    : std_logic_vector(2 downto 0);
    --------------------- RX Initialization and Reset Ports --------------------
    signal  gt2_rxuserrdy_i                 : std_logic;
    -------------------------- RX Margin Analysis Ports ------------------------
    signal  gt2_eyescandataerror_i          : std_logic;
    ------------------------- Receive Ports - CDR Ports ------------------------
    signal  gt2_rxcdrlock_i                 : std_logic;
    --------------- Receive Ports - Comma Detection and Alignment --------------
    signal  gt2_rxslide_i                   : std_logic;
    ------------------ Receive Ports - FPGA RX interface Ports -----------------
    signal  gt2_rxdata_i                    : std_logic_vector(39 downto 0);
    ------------------------ Receive Ports - RX AFE Ports ----------------------
    signal  gt2_gthrxn_i                    : std_logic;
    --------------------- Receive Ports - RX Equalizer Ports -------------------
    signal  gt2_rxmonitorout_i              : std_logic_vector(6 downto 0);
    signal  gt2_rxmonitorsel_i              : std_logic_vector(1 downto 0);
    ------------ Receive Ports - RX Fabric ClocK Output Control Ports ----------
    signal  gt2_rxratedone_i                : std_logic;
    --------------- Receive Ports - RX Fabric Output Control Ports -------------
    signal  gt2_rxoutclk_i                  : std_logic;
    signal  gt2_rxoutclk_bufg               : std_logic;
    ------------- Receive Ports - RX Initialization and Reset Ports ------------
    signal  gt2_gtrxreset_i                 : std_logic;
    ------------------------ Receive Ports -RX AFE Ports -----------------------
    signal  gt2_gthrxp_i                    : std_logic;
    -------------- Receive Ports -RX Initialization and Reset Ports ------------
    signal  gt2_rxresetdone_i               : std_logic;
    ------------------------ TX Configurable Driver Ports ----------------------
    signal  gt2_txpostcursor_i              : std_logic_vector(4 downto 0);
    signal  gt2_txprecursor_i               : std_logic_vector(4 downto 0);
    --------------------- TX Initialization and Reset Ports --------------------
    signal  gt2_gttxreset_i                 : std_logic;
    signal  gt2_txuserrdy_i                 : std_logic;
    --------------------- Transmit Ports - PCI Express Ports -------------------
    signal  gt2_txrate_i                    : std_logic_vector(2 downto 0);
    --------------- Transmit Ports - TX Configurable Driver Ports --------------
    signal  gt2_txdiffctrl_i                : std_logic_vector(3 downto 0);
    ------------------ Transmit Ports - TX Data Path interface -----------------
    signal  gt2_txdata_i                    : std_logic_vector(39 downto 0);
    ---------------- Transmit Ports - TX Driver and OOB signaling --------------
    signal  gt2_gthtxn_i                    : std_logic;
    signal  gt2_gthtxp_i                    : std_logic;
    ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    signal  gt2_txoutclk_i                  : std_logic;
    signal  gt2_txoutclkfabric_i            : std_logic;
    signal  gt2_txoutclkpcs_i               : std_logic;
    signal  gt2_txratedone_i                : std_logic;
    ------------- Transmit Ports - TX Initialization and Reset Ports -----------
    signal  gt2_txresetdone_i               : std_logic;


    --________________________________________________________________________
    --________________________________________________________________________
    --GT3   

    ---------------------------- Channel - DRP Ports  --------------------------
    signal  gt3_drpaddr_i                   : std_logic_vector(8 downto 0);
    signal  gt3_drpdi_i                     : std_logic_vector(15 downto 0);
    signal  gt3_drpdo_i                     : std_logic_vector(15 downto 0);
    signal  gt3_drpen_i                     : std_logic;
    signal  gt3_drprdy_i                    : std_logic;
    signal  gt3_drpwe_i                     : std_logic;
    ----------------------------- PCI Express Ports ----------------------------
    signal  gt3_rxrate_i                    : std_logic_vector(2 downto 0);
    --------------------- RX Initialization and Reset Ports --------------------
    signal  gt3_rxuserrdy_i                 : std_logic;
    -------------------------- RX Margin Analysis Ports ------------------------
    signal  gt3_eyescandataerror_i          : std_logic;
    ------------------------- Receive Ports - CDR Ports ------------------------
    signal  gt3_rxcdrlock_i                 : std_logic;
    --------------- Receive Ports - Comma Detection and Alignment --------------
    signal  gt3_rxslide_i                   : std_logic;
    ------------------ Receive Ports - FPGA RX interface Ports -----------------
    signal  gt3_rxdata_i                    : std_logic_vector(39 downto 0);
    ------------------------ Receive Ports - RX AFE Ports ----------------------
    signal  gt3_gthrxn_i                    : std_logic;
    --------------------- Receive Ports - RX Equalizer Ports -------------------
    signal  gt3_rxmonitorout_i              : std_logic_vector(6 downto 0);
    signal  gt3_rxmonitorsel_i              : std_logic_vector(1 downto 0);
    ------------ Receive Ports - RX Fabric ClocK Output Control Ports ----------
    signal  gt3_rxratedone_i                : std_logic;
    --------------- Receive Ports - RX Fabric Output Control Ports -------------
    signal  gt3_rxoutclk_i                  : std_logic;
    signal  gt3_rxoutclk_bufg               : std_logic;
    ------------- Receive Ports - RX Initialization and Reset Ports ------------
    signal  gt3_gtrxreset_i                 : std_logic;
    ------------------------ Receive Ports -RX AFE Ports -----------------------
    signal  gt3_gthrxp_i                    : std_logic;
    -------------- Receive Ports -RX Initialization and Reset Ports ------------
    signal  gt3_rxresetdone_i               : std_logic;
    ------------------------ TX Configurable Driver Ports ----------------------
    signal  gt3_txpostcursor_i              : std_logic_vector(4 downto 0);
    signal  gt3_txprecursor_i               : std_logic_vector(4 downto 0);
    --------------------- TX Initialization and Reset Ports --------------------
    signal  gt3_gttxreset_i                 : std_logic;
    signal  gt3_txuserrdy_i                 : std_logic;
    --------------------- Transmit Ports - PCI Express Ports -------------------
    signal  gt3_txrate_i                    : std_logic_vector(2 downto 0);
    --------------- Transmit Ports - TX Configurable Driver Ports --------------
    signal  gt3_txdiffctrl_i                : std_logic_vector(3 downto 0);
    ------------------ Transmit Ports - TX Data Path interface -----------------
    signal  gt3_txdata_i                    : std_logic_vector(39 downto 0);
    ---------------- Transmit Ports - TX Driver and OOB signaling --------------
    signal  gt3_gthtxn_i                    : std_logic;
    signal  gt3_gthtxp_i                    : std_logic;
    ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    signal  gt3_txoutclk_i                  : std_logic;
    signal  gt3_txoutclkfabric_i            : std_logic;
    signal  gt3_txoutclkpcs_i               : std_logic;
    signal  gt3_txratedone_i                : std_logic;
    ------------- Transmit Ports - TX Initialization and Reset Ports -----------
    signal  gt3_txresetdone_i               : std_logic;

    --____________________________COMMON PORTS________________________________
    ------------------------- Common Block - QPLL Ports ------------------------
    signal  gt0_qplllock_i                  : std_logic;
    signal  gt0_qpllrefclklost_i            : std_logic;
    signal  gt0_qpllreset_i                 : std_logic;

    ------------------------------- Global Signals -----------------------------
    signal  gt0_tx_system_reset_c           : std_logic;
    signal  gt0_rx_system_reset_c           : std_logic;
    signal  gt1_tx_system_reset_c           : std_logic;
    signal  gt1_rx_system_reset_c           : std_logic;
    signal  gt2_tx_system_reset_c           : std_logic;
    signal  gt2_rx_system_reset_c           : std_logic;
    signal  gt3_tx_system_reset_c           : std_logic;
    signal  gt3_rx_system_reset_c           : std_logic;
    signal  tied_to_ground_i                : std_logic;
    signal  tied_to_ground_vec_i            : std_logic_vector(63 downto 0);
    signal  tied_to_vcc_i                   : std_logic;
    signal  tied_to_vcc_vec_i               : std_logic_vector(7 downto 0);
    signal  drpclk_in_i                     : std_logic;
    signal  sys_clk                         : std_logic;
 
    signal  GTTXRESET_IN                    : std_logic;
    signal  GTRXRESET_IN                    : std_logic;
    signal  QPLLRESET_IN                    : std_logic;

   ------------------------------- User Clocks ---------------------------------
    attribute keep: string;
    attribute keep of gt0_txoutclk_i : signal is "true";
    signal    gt0_txusrclk_i                  : std_logic; 
    signal    gt0_txusrclk2_i                 : std_logic; 
    signal    gt0_rxusrclk_i                  : std_logic; 
    signal    gt0_rxusrclk2_i                 : std_logic; 
    attribute keep of gt0_txusrclk_i  : signal is "true";
    attribute keep of gt0_txusrclk2_i : signal is "true";
    attribute keep of gt0_rxusrclk_i  : signal is "true";
    attribute keep of gt0_rxusrclk2_i : signal is "true";
    signal    gt1_txusrclk_i                  : std_logic; 
    signal    gt1_txusrclk2_i                 : std_logic; 
    signal    gt1_rxusrclk_i                  : std_logic; 
    signal    gt1_rxusrclk2_i                 : std_logic; 
    attribute keep of gt1_txusrclk_i  : signal is "true";
    attribute keep of gt1_txusrclk2_i : signal is "true";
    attribute keep of gt1_rxusrclk_i  : signal is "true";
    attribute keep of gt1_rxusrclk2_i : signal is "true";
    signal    gt2_txusrclk_i                  : std_logic; 
    signal    gt2_txusrclk2_i                 : std_logic; 
    signal    gt2_rxusrclk_i                  : std_logic; 
    signal    gt2_rxusrclk2_i                 : std_logic; 
    attribute keep of gt2_txusrclk_i  : signal is "true";
    attribute keep of gt2_txusrclk2_i : signal is "true";
    attribute keep of gt2_rxusrclk_i  : signal is "true";
    attribute keep of gt2_rxusrclk2_i : signal is "true";
    signal    gt3_txusrclk_i                  : std_logic; 
    signal    gt3_txusrclk2_i                 : std_logic; 
    signal    gt3_rxusrclk_i                  : std_logic; 
    signal    gt3_rxusrclk2_i                 : std_logic; 
    attribute keep of gt3_txusrclk_i  : signal is "true";
    attribute keep of gt3_txusrclk2_i : signal is "true";
    attribute keep of gt3_rxusrclk_i  : signal is "true";
    attribute keep of gt3_rxusrclk2_i : signal is "true";

    ----------------------------- Reference Clocks ----------------------------   
    signal    q0_clk1_refclk_i                : std_logic;
    ----------------------- Chipscope Signals ---------------------------------

    signal  gt0_ila_in_i                    : std_logic_vector(57 downto 0);
     
    signal  tx_data_vio_control_i           : std_logic_vector(35 downto 0);
    signal  rx_data_vio_control_i           : std_logic_vector(35 downto 0);
    signal  shared_vio_control_i            : std_logic_vector(35 downto 0);
    signal  channel_drp_vio_control_i       : std_logic_vector(35 downto 0);
    signal  common_drp_vio_control_i        : std_logic_vector(35 downto 0);
    signal  tx_data_vio_async_in_i          : std_logic_vector(31 downto 0);
    signal  tx_data_vio_sync_in_i           : std_logic_vector(31 downto 0);
    signal  tx_data_vio_async_out_i         : std_logic_vector(31 downto 0);
    signal  tx_data_vio_sync_out_i          : std_logic_vector(31 downto 0);
    signal  rx_data_vio_async_in_i          : std_logic_vector(31 downto 0);
    signal  rx_data_vio_sync_in_i           : std_logic_vector(31 downto 0);
    signal  rx_data_vio_async_out_i         : std_logic_vector(31 downto 0);
    signal  rx_data_vio_sync_out_i          : std_logic_vector(31 downto 0);
    signal  shared_vio_in_i                 : std_logic_vector(31 downto 0);
    signal  shared_vio_out_i                : std_logic_vector(31 downto 0);


    signal  gt0_tx_data_vio_async_in_i      : std_logic_vector(31 downto 0);
    signal  gt0_tx_data_vio_sync_in_i       : std_logic_vector(31 downto 0);
    signal  gt0_tx_data_vio_async_out_i     : std_logic_vector(31 downto 0);
    signal  gt0_tx_data_vio_sync_out_i      : std_logic_vector(31 downto 0);
    signal  gt0_rx_data_vio_async_in_i      : std_logic_vector(31 downto 0);
    signal  gt0_rx_data_vio_sync_in_i       : std_logic_vector(31 downto 0);
    signal  gt0_rx_data_vio_async_out_i     : std_logic_vector(31 downto 0);
    signal  gt0_rx_data_vio_sync_out_i      : std_logic_vector(31 downto 0);


    signal  gt1_tx_data_vio_async_in_i      : std_logic_vector(31 downto 0);
    signal  gt1_tx_data_vio_sync_in_i       : std_logic_vector(31 downto 0);
    signal  gt1_tx_data_vio_async_out_i     : std_logic_vector(31 downto 0);
    signal  gt1_tx_data_vio_sync_out_i      : std_logic_vector(31 downto 0);
    signal  gt1_rx_data_vio_async_in_i      : std_logic_vector(31 downto 0);
    signal  gt1_rx_data_vio_sync_in_i       : std_logic_vector(31 downto 0);
    signal  gt1_rx_data_vio_async_out_i     : std_logic_vector(31 downto 0);
    signal  gt1_rx_data_vio_sync_out_i      : std_logic_vector(31 downto 0);
    signal  gt1_ila_in_i                    : std_logic_vector(57 downto 0);


    signal  gt2_tx_data_vio_async_in_i      : std_logic_vector(31 downto 0);
    signal  gt2_tx_data_vio_sync_in_i       : std_logic_vector(31 downto 0);
    signal  gt2_tx_data_vio_async_out_i     : std_logic_vector(31 downto 0);
    signal  gt2_tx_data_vio_sync_out_i      : std_logic_vector(31 downto 0);
    signal  gt2_rx_data_vio_async_in_i      : std_logic_vector(31 downto 0);
    signal  gt2_rx_data_vio_sync_in_i       : std_logic_vector(31 downto 0);
    signal  gt2_rx_data_vio_async_out_i     : std_logic_vector(31 downto 0);
    signal  gt2_rx_data_vio_sync_out_i      : std_logic_vector(31 downto 0);
    signal  gt2_ila_in_i                    : std_logic_vector(57 downto 0);


    signal  gt3_tx_data_vio_async_in_i      : std_logic_vector(31 downto 0);
    signal  gt3_tx_data_vio_sync_in_i       : std_logic_vector(31 downto 0);
    signal  gt3_tx_data_vio_async_out_i     : std_logic_vector(31 downto 0);
    signal  gt3_tx_data_vio_sync_out_i      : std_logic_vector(31 downto 0);
    signal  gt3_rx_data_vio_async_in_i      : std_logic_vector(31 downto 0);
    signal  gt3_rx_data_vio_sync_in_i       : std_logic_vector(31 downto 0);
    signal  gt3_rx_data_vio_async_out_i     : std_logic_vector(31 downto 0);
    signal  gt3_rx_data_vio_sync_out_i      : std_logic_vector(31 downto 0);
    signal  gt3_ila_in_i                    : std_logic_vector(57 downto 0);

    signal  gttxreset_i                     : std_logic;
    signal  gtrxreset_i                     : std_logic;
     
    signal  soft_reset_i                    : std_logic;

    signal  user_tx_reset_i                 : std_logic;
    signal  user_rx_reset_i                 : std_logic;
    signal  tx_vio_clk_i                    : std_logic;
    signal  tx_vio_clk_mux_out_i            : std_logic;    
    signal  rx_vio_ila_clk_i                : std_logic;
    signal  rx_vio_ila_clk_mux_out_i        : std_logic;    
    signal  cpllreset_i                     : std_logic;
    
    signal  qpllreset_i                     : std_logic;
     
    signal  picxo_rst0                       : std_logic_vector(7 downto 0);
    signal  picxo_rst1                       : std_logic_vector(7 downto 0);
    signal  picxo_rst2                       : std_logic_vector(7 downto 0);
    signal  picxo_rst3                       : std_logic_vector(7 downto 0);
    
    attribute shreg_extract                 : string;
    attribute equivalent_register_removal   : string;
    attribute equivalent_register_removal of picxo_rst0    : signal is "no";    
    attribute equivalent_register_removal of picxo_rst1    : signal is "no";    
    attribute equivalent_register_removal of picxo_rst2    : signal is "no";    
    attribute equivalent_register_removal of picxo_rst3    : signal is "no";    
    
    attribute shreg_extract of picxo_rst0    : signal is "no";    
    attribute shreg_extract of picxo_rst1    : signal is "no";    
    attribute shreg_extract of picxo_rst2    : signal is "no";    
    attribute shreg_extract of picxo_rst3    : signal is "no";    
     
    signal  G1                              : STD_LOGIC_VECTOR (4 downto 0) ;
    signal  G2                              : STD_LOGIC_VECTOR (4 downto 0) ;
    signal  R                               : STD_LOGIC_VECTOR (15 downto 0);
    signal  V                               : STD_LOGIC_VECTOR (15 downto 0);
    signal  ce_dsp_rate                     : std_logic_vector (15 downto 0);
    signal  C                               : STD_LOGIC_VECTOR (6 downto 0) ;
    signal  P                               : STD_LOGIC_VECTOR (9 downto 0) ;
    signal  N                               : STD_LOGIC_VECTOR (9 downto 0) ;
    signal  don                             : STD_LOGIC_VECTOR (0 downto 0) ;
    
    signal  Offset_ppm                      : std_logic_vector (21 downto 0);
    signal  Offset_en                       : std_logic                     ;
    signal  hold                            : std_logic                     ;
    signal  rsigce                          : std_logic                     ;
    signal  vsigce                          : std_logic                     ;
     
    signal  drp_user_req                    : std_logic :='0';
    signal  drpen_user                      : STD_LOGIC;
    signal  drpwen_user                     : STD_LOGIC;
    signal  drpaddr_user                    : STD_LOGIC_VECTOR (7 downto 0);
    signal  drpdata_user                    : STD_LOGIC_VECTOR (15 downto 0);
    signal  drprdy_user                     : STD_LOGIC;                                                       
    signal  drpbusy                         : STD_LOGIC;
    signal  gtx_drpdata_o                   : STD_LOGIC_VECTOR (15 downto 0);
    signal  acc_step                        : STD_LOGIC_VECTOR (3 downto 0);

    signal gt0_error_o                          : STD_LOGIC_VECTOR (20 downto 0) ;
    signal gt0_volt_o                           : STD_LOGIC_VECTOR (21 downto 0) ;
    signal gt0_ce_pi_o                          : STD_LOGIC ;
    signal gt0_ce_pi2_o                         : STD_LOGIC ;
    signal gt0_ce_dsp_o                         : STD_LOGIC ;
    signal gt0_ovf_pd                           : STD_LOGIC ;
    signal gt0_ovf_ab                           : STD_LOGIC ;
    signal gt0_ovf_volt                         : STD_LOGIC ;
    signal gt0_ovf_int                          : STD_LOGIC ;
    
    signal gt1_error_o                          : STD_LOGIC_VECTOR (20 downto 0) ;
    signal gt1_volt_o                           : STD_LOGIC_VECTOR (21 downto 0) ;
    signal gt1_ce_pi_o                          : STD_LOGIC ;
    signal gt1_ce_pi2_o                         : STD_LOGIC ;
    signal gt1_ce_dsp_o                         : STD_LOGIC ;
    signal gt1_ovf_pd                           : STD_LOGIC ;
    signal gt1_ovf_ab                           : STD_LOGIC ;
    signal gt1_ovf_volt                         : STD_LOGIC ;
    signal gt1_ovf_int                          : STD_LOGIC ;

    signal gt2_error_o                          : STD_LOGIC_VECTOR (20 downto 0) ;
    signal gt2_volt_o                           : STD_LOGIC_VECTOR (21 downto 0) ;
    signal gt2_ce_pi_o                          : STD_LOGIC ;
    signal gt2_ce_pi2_o                         : STD_LOGIC ;
    signal gt2_ce_dsp_o                         : STD_LOGIC ;
    signal gt2_ovf_pd                           : STD_LOGIC ;
    signal gt2_ovf_ab                           : STD_LOGIC ;
    signal gt2_ovf_volt                         : STD_LOGIC ;
    signal gt2_ovf_int                          : STD_LOGIC ;
    
    signal gt3_error_o                          : STD_LOGIC_VECTOR (20 downto 0) ;
    signal gt3_volt_o                           : STD_LOGIC_VECTOR (21 downto 0) ;
    signal gt3_ce_pi_o                          : STD_LOGIC ;
    signal gt3_ce_pi2_o                         : STD_LOGIC ;
    signal gt3_ce_dsp_o                         : STD_LOGIC ;
    signal gt3_ovf_pd                           : STD_LOGIC ;
    signal gt3_ovf_ab                           : STD_LOGIC ;
    signal gt3_ovf_volt                         : STD_LOGIC ;
    signal gt3_ovf_int                          : STD_LOGIC ;
    
    signal  gt0_txpippmstepsize_i           : std_logic_vector (4 downto 0);
    signal  gt1_txpippmstepsize_i           : std_logic_vector (4 downto 0);
    signal  gt2_txpippmstepsize_i           : std_logic_vector (4 downto 0);
    signal  gt3_txpippmstepsize_i           : std_logic_vector (4 downto 0);
     
    signal  gtx0_den_i                      : std_logic;
    signal  gtx0_dwe_i                      : std_logic;
    signal  gtx0_drdy_i                     : std_logic;
    signal  gtx0_di_i                       : std_logic_vector (15 downto 0);
    signal  gtx0_daddr_i                    : std_logic_vector (7 downto 0);
     
     --si5324--
     
    signal Si5324_freq_sel_ip               : std_logic_vector(7 downto 0) := "00000000";
    signal Si5324_in_fsel                   : std_logic_vector(4 downto 0) := "00000";
    signal Si5324_bw_sel                    : std_logic_vector(3 downto 0) := "0000";
    signal i2c_mux_reset_ff                 : std_logic := '0';

     
   function and_reduce(arg: std_logic_vector) return std_logic is
   variable result: std_logic;
    begin
   result := '1';
   for i in arg'range loop
       result := result and arg(i);
   end loop;
        return result;
    end;

attribute buffer_type : string;
attribute buffer_type of sfp_tx_fault_in : signal is "none";
attribute buffer_type of sfp_mod_detect_in : signal is "none";
attribute buffer_type of sfp_los_in : signal is "none";

    -- WA CR#856942 mark_debug not getting applied automatically on the signals connected to ILA 
    attribute mark_debug : string;
    attribute mark_debug of gt0_error_o,gt0_volt_o,gt0_ce_pi_o,gt0_ce_pi2_o,gt0_ce_dsp_o,gt0_ovf_pd,gt0_ovf_ab,gt0_ovf_volt,gt0_ovf_int : signal is "true";
    attribute mark_debug of gt1_error_o,gt1_volt_o,gt1_ce_pi_o,gt1_ce_pi2_o,gt1_ce_dsp_o,gt1_ovf_pd,gt1_ovf_ab,gt1_ovf_volt,gt1_ovf_int : signal is "true";
    attribute mark_debug of gt2_error_o,gt2_volt_o,gt2_ce_pi_o,gt2_ce_pi2_o,gt2_ce_dsp_o,gt2_ovf_pd,gt2_ovf_ab,gt2_ovf_volt,gt2_ovf_int : signal is "true";
    attribute mark_debug of gt3_error_o,gt3_volt_o,gt3_ce_pi_o,gt3_ce_pi2_o,gt3_ce_dsp_o,gt3_ovf_pd,gt3_ovf_ab,gt3_ovf_volt,gt3_ovf_int : signal is "true";

--**************************** Main Body of Code *******************************
begin

    gt0_rxoutclk_i_o<= gt0_rxoutclk_bufg;
    gt0_txoutclk_i_o<= gt0_txusrclk_i;
    drpclk_in_i_o <= drpclk_in_i;
    --  Static signal Assigments
    tied_to_ground_i                             <= '0';
    tied_to_ground_vec_i                         <= x"0000000000000000";
    tied_to_vcc_i                                <= '1';
    tied_to_vcc_vec_i                            <= x"ff";

    sys_clk_bufg_inst : IBUFGDS generic map (IOSTANDARD => "DEFAULT") port map(I=>SYS_CLK_P, IB =>SYS_CLK_N, O=>sys_clk);
  

    gt0_usrclk_source : gtwizard_v2_4_GT_USRCLK_SOURCE
    port map
    (
        Q0_CLK1_GTREFCLK_PAD_N_IN       =>      Q0_CLK1_GTREFCLK_PAD_N_IN,
        Q0_CLK1_GTREFCLK_PAD_P_IN       =>      Q0_CLK1_GTREFCLK_PAD_P_IN,
        Q0_CLK1_GTREFCLK_OUT            =>      q0_clk1_refclk_i,
 
        GT0_TXUSRCLK_OUT                =>      gt0_txusrclk_i,
        GT0_TXUSRCLK2_OUT               =>      gt0_txusrclk2_i,
        GT0_TXOUTCLK_IN                 =>      gt0_txoutclk_i,
        GT0_RXUSRCLK_OUT                =>      gt0_rxusrclk_i,
        GT0_RXUSRCLK2_OUT               =>      gt0_rxusrclk2_i,
        GT1_TXUSRCLK_OUT                =>      gt1_txusrclk_i,
        GT1_TXUSRCLK2_OUT               =>      gt1_txusrclk2_i,
        GT1_TXOUTCLK_IN                 =>      gt1_txoutclk_i,
        GT1_RXUSRCLK_OUT                =>      gt1_rxusrclk_i,
        GT1_RXUSRCLK2_OUT               =>      gt1_rxusrclk2_i,
 
        GT2_TXUSRCLK_OUT                =>      gt2_txusrclk_i,
        GT2_TXUSRCLK2_OUT               =>      gt2_txusrclk2_i,
        GT2_TXOUTCLK_IN                 =>      gt2_txoutclk_i,
        GT2_RXUSRCLK_OUT                =>      gt2_rxusrclk_i,
        GT2_RXUSRCLK2_OUT               =>      gt2_rxusrclk2_i,
 
        GT3_TXUSRCLK_OUT                =>      gt3_txusrclk_i,
        GT3_TXUSRCLK2_OUT               =>      gt3_txusrclk2_i,
        GT3_TXOUTCLK_IN                 =>      gt3_txoutclk_i,
        GT3_RXUSRCLK_OUT                =>      gt3_rxusrclk_i,
        GT3_RXUSRCLK2_OUT               =>      gt3_rxusrclk2_i,
        DRPCLK_IN                       =>      sys_clk,
        DRPCLK_OUT                      =>      drpclk_in_i

    );

    ----------------------------- The GT Wrapper -----------------------------
    
    -- Use the instantiation template in the example directory to add the GT wrapper to your design.
    -- In this example, the wrapper is wired up for basic operation with a frame generator and frame 
    -- checker. The GTs will reset, then attempt to align and transmit data. If channel bonding is 
    -- enabled, bonding should occur after alignment.


    gtwizard_v2_4_init_i : gtwizard_v2_4_init
    generic map
    (
        EXAMPLE_SIM_GTRESET_SPEEDUP     =>      EXAMPLE_SIM_GTRESET_SPEEDUP,
        EXAMPLE_SIMULATION              =>      EXAMPLE_SIMULATION,
        EXAMPLE_USE_CHIPSCOPE           =>      EXAMPLE_USE_SCOPE
    )
    port map
    (
        SYSCLK_IN                       =>      drpclk_in_i,
        SOFT_RESET_IN                   =>      soft_reset_i,
        GT0_TX_FSM_RESET_DONE_OUT       =>      gt0_txfsmresetdone_i,
        GT0_RX_FSM_RESET_DONE_OUT       =>      gt0_rxfsmresetdone_i,
        GT0_DATA_VALID_IN               =>      '1',
        GT1_TX_FSM_RESET_DONE_OUT       =>      gt1_txfsmresetdone_i,
        GT1_RX_FSM_RESET_DONE_OUT       =>      gt1_rxfsmresetdone_i,
        GT1_DATA_VALID_IN               =>      '1',
        GT2_TX_FSM_RESET_DONE_OUT       =>      gt2_txfsmresetdone_i,
        GT2_RX_FSM_RESET_DONE_OUT       =>      gt2_rxfsmresetdone_i,
        GT2_DATA_VALID_IN               =>      '1',
        GT3_TX_FSM_RESET_DONE_OUT       =>      gt3_txfsmresetdone_i,
        GT3_RX_FSM_RESET_DONE_OUT       =>      gt3_rxfsmresetdone_i,
        GT3_DATA_VALID_IN               =>      '1',
  
        --_____________________________________________________________________
        --_____________________________________________________________________
        --GT0  
        ----------------------------- PCI Express Ports ----------------------------
        GT0_RXRATE_IN                   =>      gt0_rxrate_i,
        --------------------- RX Initialization and Reset Ports --------------------
        GT0_RXUSERRDY_IN                =>      gt0_rxuserrdy_i,
        -------------------------- RX Margin Analysis Ports ------------------------
        GT0_EYESCANDATAERROR_OUT        =>      gt0_eyescandataerror_i,
        ------------------------- Receive Ports - CDR Ports ------------------------
        GT0_RXCDRLOCK_OUT               =>      gt0_rxcdrlock_i,
        ------------------ Receive Ports - FPGA RX Interface Ports -----------------
        GT0_RXUSRCLK_IN                 =>      gt0_txusrclk_i,
        GT0_RXUSRCLK2_IN                =>      gt0_txusrclk_i,
        ------------------ Receive Ports - FPGA RX interface Ports -----------------
        GT0_RXDATA_OUT                  =>      gt0_rxdata_i,
        ------------------------ Receive Ports - RX AFE Ports ----------------------
        GT0_GTHRXN_IN                   =>      RXN_IN(0),
        --------------------- Receive Ports - RX Equalizer Ports -------------------
        GT0_RXMONITOROUT_OUT            =>      gt0_rxmonitorout_i,
        GT0_RXMONITORSEL_IN             =>      gt0_rxmonitorsel_i,
        ------------ Receive Ports - RX Fabric ClocK Output Control Ports ----------
        GT0_RXRATEDONE_OUT              =>      gt0_rxratedone_i,
        --------------- Receive Ports - RX Fabric Output Control Ports -------------
        GT0_RXOUTCLK_OUT                =>      gt0_rxoutclk_i,
        ---------------------- Receive Ports - RX Gearbox Ports --------------------
        GT0_RXSLIDE_IN                  =>      gt0_rxslide_i,
        ------------- Receive Ports - RX Initialization and Reset Ports ------------
        GT0_GTRXRESET_IN                =>      gt0_gtrxreset_i,
        ------------------------ Receive Ports -RX AFE Ports -----------------------
        GT0_GTHRXP_IN                   =>      RXP_IN(0),
        -------------- Receive Ports -RX Initialization and Reset Ports ------------
        GT0_RXRESETDONE_OUT             =>      gt0_rxresetdone_i,
        ------------------------ TX Configurable Driver Ports ----------------------
        GT0_TXPOSTCURSOR_IN             =>      gt0_txpostcursor_i,
        GT0_TXPRECURSOR_IN              =>      gt0_txprecursor_i,
        --------------------- TX Initialization and Reset Ports --------------------
        GT0_GTTXRESET_IN                =>      gt0_gttxreset_i,
        GT0_TXUSERRDY_IN                =>      gt0_txuserrdy_i,
        ------------------ Transmit Ports - FPGA TX Interface Ports ----------------
        GT0_TXUSRCLK_IN                 =>      gt0_txusrclk_i,
        GT0_TXUSRCLK2_IN                =>      gt0_txusrclk_i,
        --------------------- Transmit Ports - PCI Express Ports -------------------
        GT0_TXRATE_IN                   =>      gt0_txrate_i,
        --------------- Transmit Ports - TX Configurable Driver Ports --------------
        GT0_TXDIFFCTRL_IN               =>      gt0_txdiffctrl_i,
        ------------------ Transmit Ports - TX Data Path interface -----------------
        GT0_TXDATA_IN                   =>      gt0_rxdata_i,
        ---------------- Transmit Ports - TX Driver and OOB signaling --------------
        GT0_GTHTXN_OUT                  =>      TXN_OUT(0),
        GT0_GTHTXP_OUT                  =>      TXP_OUT(0),
        ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        GT0_TXOUTCLK_OUT                =>      gt0_txoutclk_i_nophase,
        GT0_TXOUTCLKFABRIC_OUT          =>      gt0_txoutclkfabric_i,
        GT0_TXOUTCLKPCS_OUT             =>      gt0_txoutclkpcs_i,
        GT0_TXRATEDONE_OUT              =>      gt0_txratedone_i,
        ------------- Transmit Ports - TX Initialization and Reset Ports -----------
        GT0_TXRESETDONE_OUT             =>      gt0_txresetdone_i,
          ---TXPI---
        GT0_TXPIPPMSTEPSIZE_IN          =>      gt0_txpippmstepsize_i,
        --_____________________________________________________________________
        --_____________________________________________________________________
        --GT1  
        ---------------------------- Channel - DRP Ports  --------------------------
        GT1_DRPADDR_IN                  =>      gt1_drpaddr_i,
        GT1_DRPCLK_IN                   =>      drpclk_in_i,
        GT1_DRPDI_IN                    =>      gt1_drpdi_i,
        GT1_DRPDO_OUT                   =>      gt1_drpdo_i,
        GT1_DRPEN_IN                    =>      gt1_drpen_i,
        GT1_DRPRDY_OUT                  =>      gt1_drprdy_i,
        GT1_DRPWE_IN                    =>      gt1_drpwe_i,
        ----------------------------- PCI Express Ports ----------------------------
        GT1_RXRATE_IN                   =>      gt1_rxrate_i,
        --------------------- RX Initialization and Reset Ports --------------------
        GT1_RXUSERRDY_IN                =>      gt1_rxuserrdy_i,
        -------------------------- RX Margin Analysis Ports ------------------------
        GT1_EYESCANDATAERROR_OUT        =>      gt1_eyescandataerror_i,
        ------------------------- Receive Ports - CDR Ports ------------------------
        GT1_RXCDRLOCK_OUT               =>      gt1_rxcdrlock_i,
        --------------- Receive Ports - Comma Detection and Alignment --------------
        GT1_RXSLIDE_IN                  =>      gt1_rxslide_i,
        ------------------ Receive Ports - FPGA RX Interface Ports -----------------
        GT1_RXUSRCLK_IN                 =>      gt1_txusrclk_i,
        GT1_RXUSRCLK2_IN                =>      gt1_txusrclk_i,
        ------------------ Receive Ports - FPGA RX interface Ports -----------------
        GT1_RXDATA_OUT                  =>      gt1_rxdata_i,
        ------------------------ Receive Ports - RX AFE Ports ----------------------
        GT1_GTHRXN_IN                   =>      RXN_IN(1),
        --------------------- Receive Ports - RX Equalizer Ports -------------------
        GT1_RXMONITOROUT_OUT            =>      gt1_rxmonitorout_i,
        GT1_RXMONITORSEL_IN             =>      gt1_rxmonitorsel_i,
        ------------ Receive Ports - RX Fabric ClocK Output Control Ports ----------
        GT1_RXRATEDONE_OUT              =>      gt1_rxratedone_i,
        GT1_RXOUTCLK_OUT                =>      gt1_rxoutclk_i,
        ------------- Receive Ports - RX Initialization and Reset Ports ------------
        GT1_GTRXRESET_IN                =>      gt1_gtrxreset_i,
        ------------------------ Receive Ports -RX AFE Ports -----------------------
        GT1_GTHRXP_IN                   =>      RXP_IN(1),
        -------------- Receive Ports -RX Initialization and Reset Ports ------------
        GT1_RXRESETDONE_OUT             =>      gt1_rxresetdone_i,
        ------------------------ TX Configurable Driver Ports ----------------------
        GT1_TXPOSTCURSOR_IN             =>      gt1_txpostcursor_i,
        GT1_TXPRECURSOR_IN              =>      gt1_txprecursor_i,
        --------------------- TX Initialization and Reset Ports --------------------
        GT1_GTTXRESET_IN                =>      gt1_gttxreset_i,
        GT1_TXUSERRDY_IN                =>      gt1_txuserrdy_i,
        ------------------ Transmit Ports - FPGA TX Interface Ports ----------------
        GT1_TXUSRCLK_IN                 =>      gt1_txusrclk_i,
        GT1_TXUSRCLK2_IN                =>      gt1_txusrclk_i,
        --------------------- Transmit Ports - PCI Express Ports -------------------
        GT1_TXRATE_IN                   =>      gt1_txrate_i,
        --------------- Transmit Ports - TX Configurable Driver Ports --------------
        GT1_TXDIFFCTRL_IN               =>      gt1_txdiffctrl_i,
        ------------------ Transmit Ports - TX Data Path interface -----------------
        GT1_TXDATA_IN                   =>      gt1_rxdata_i,
        ---------------- Transmit Ports - TX Driver and OOB signaling --------------
        GT1_GTHTXN_OUT                  =>      TXN_OUT(1),
        GT1_GTHTXP_OUT                  =>      TXP_OUT(1),
        ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        GT1_TXOUTCLK_OUT                =>      gt1_txoutclk_i,
        GT1_TXOUTCLKFABRIC_OUT          =>      gt1_txoutclkfabric_i,
        GT1_TXOUTCLKPCS_OUT             =>      gt1_txoutclkpcs_i,
        GT1_TXRATEDONE_OUT              =>      gt1_txratedone_i,
        ------------- Transmit Ports - TX Initialization and Reset Ports -----------
        GT1_TXRESETDONE_OUT             =>      gt1_txresetdone_i,

        GT1_TXPIPPMSTEPSIZE_IN          =>      gt1_txpippmstepsize_i,
        --_____________________________________________________________________
        --_____________________________________________________________________
        --GT2 
        ---------------------------- Channel - DRP Ports  --------------------------
        GT2_DRPADDR_IN                  =>      gt2_drpaddr_i,
        GT2_DRPCLK_IN                   =>      drpclk_in_i,
        GT2_DRPDI_IN                    =>      gt2_drpdi_i,
        GT2_DRPDO_OUT                   =>      gt2_drpdo_i,
        GT2_DRPEN_IN                    =>      gt2_drpen_i,
        GT2_DRPRDY_OUT                  =>      gt2_drprdy_i,
        GT2_DRPWE_IN                    =>      gt2_drpwe_i,
        ----------------------------- PCI Express Ports ----------------------------
        GT2_RXRATE_IN                   =>      gt2_rxrate_i,
        --------------------- RX Initialization and Reset Ports --------------------
        GT2_RXUSERRDY_IN                =>      gt2_rxuserrdy_i,
        -------------------------- RX Margin Analysis Ports ------------------------
        GT2_EYESCANDATAERROR_OUT        =>      gt2_eyescandataerror_i,
        ------------------------- Receive Ports - CDR Ports ------------------------
        GT2_RXCDRLOCK_OUT               =>      gt2_rxcdrlock_i,
        --------------- Receive Ports - Comma Detection and Alignment --------------
        GT2_RXSLIDE_IN                  =>      gt2_rxslide_i,
        ------------------ Receive Ports - FPGA RX Interface Ports -----------------
        GT2_RXUSRCLK_IN                 =>      gt2_txusrclk_i,
        GT2_RXUSRCLK2_IN                =>      gt2_txusrclk_i,
        ------------------ Receive Ports - FPGA RX interface Ports -----------------
        GT2_RXDATA_OUT                  =>      gt2_rxdata_i,
        ------------------------ Receive Ports - RX AFE Ports ----------------------
        GT2_GTHRXN_IN                   =>      RXN_IN(2),
        --------------------- Receive Ports - RX Equalizer Ports -------------------
        GT2_RXMONITOROUT_OUT            =>      gt2_rxmonitorout_i,
        GT2_RXMONITORSEL_IN             =>      gt2_rxmonitorsel_i,
        ------------ Receive Ports - RX Fabric ClocK Output Control Ports ----------
        GT2_RXRATEDONE_OUT              =>      gt2_rxratedone_i,
        GT2_RXOUTCLK_OUT                =>      gt2_rxoutclk_i,
        ------------- Receive Ports - RX Initialization and Reset Ports ------------
        GT2_GTRXRESET_IN                =>      gt2_gtrxreset_i,
        ------------------------ Receive Ports -RX AFE Ports -----------------------
        GT2_GTHRXP_IN                   =>      RXP_IN(2),
        -------------- Receive Ports -RX Initialization and Reset Ports ------------
        GT2_RXRESETDONE_OUT             =>      gt2_rxresetdone_i,
        ------------------------ TX Configurable Driver Ports ----------------------
        GT2_TXPOSTCURSOR_IN             =>      gt2_txpostcursor_i,
        GT2_TXPRECURSOR_IN              =>      gt2_txprecursor_i,
        --------------------- TX Initialization and Reset Ports --------------------
        GT2_GTTXRESET_IN                =>      gt2_gttxreset_i,
        GT2_TXUSERRDY_IN                =>      gt2_txuserrdy_i,
        ------------------ Transmit Ports - FPGA TX Interface Ports ----------------
        GT2_TXUSRCLK_IN                 =>      gt2_txusrclk_i,
        GT2_TXUSRCLK2_IN                =>      gt2_txusrclk_i,
        --------------------- Transmit Ports - PCI Express Ports -------------------
        GT2_TXRATE_IN                   =>      gt2_txrate_i,
        --------------- Transmit Ports - TX Configurable Driver Ports --------------
        GT2_TXDIFFCTRL_IN               =>      gt2_txdiffctrl_i,
        ------------------ Transmit Ports - TX Data Path interface -----------------
        GT2_TXDATA_IN                   =>      gt2_rxdata_i,
        ---------------- Transmit Ports - TX Driver and OOB signaling --------------
        GT2_GTHTXN_OUT                  =>      TXN_OUT(2),
        GT2_GTHTXP_OUT                  =>      TXP_OUT(2),
        ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        GT2_TXOUTCLK_OUT                =>      gt2_txoutclk_i,
        GT2_TXOUTCLKFABRIC_OUT          =>      gt2_txoutclkfabric_i,
        GT2_TXOUTCLKPCS_OUT             =>      gt2_txoutclkpcs_i,
        GT2_TXRATEDONE_OUT              =>      gt2_txratedone_i,
        ------------- Transmit Ports - TX Initialization and Reset Ports -----------
        GT2_TXRESETDONE_OUT             =>      gt2_txresetdone_i,
        GT2_TXPIPPMSTEPSIZE_IN          =>      gt2_txpippmstepsize_i,
        --_____________________________________________________________________
        --_____________________________________________________________________
        --GT3 
        ---------------------------- Channel - DRP Ports  --------------------------
        GT3_DRPADDR_IN                  =>      gt3_drpaddr_i,
        GT3_DRPCLK_IN                   =>      drpclk_in_i,
        GT3_DRPDI_IN                    =>      gt3_drpdi_i,
        GT3_DRPDO_OUT                   =>      gt3_drpdo_i,
        GT3_DRPEN_IN                    =>      gt3_drpen_i,
        GT3_DRPRDY_OUT                  =>      gt3_drprdy_i,
        GT3_DRPWE_IN                    =>      gt3_drpwe_i,
        ----------------------------- PCI Express Ports ----------------------------
        GT3_RXRATE_IN                   =>      gt3_rxrate_i,
        --------------------- RX Initialization and Reset Ports --------------------
        GT3_RXUSERRDY_IN                =>      gt3_rxuserrdy_i,
        -------------------------- RX Margin Analysis Ports ------------------------
        GT3_EYESCANDATAERROR_OUT        =>      gt3_eyescandataerror_i,
        ------------------------- Receive Ports - CDR Ports ------------------------
        GT3_RXCDRLOCK_OUT               =>      gt3_rxcdrlock_i,
        --------------- Receive Ports - Comma Detection and Alignment --------------
        GT3_RXSLIDE_IN                  =>      gt3_rxslide_i,
        ------------------ Receive Ports - FPGA RX Interface Ports -----------------
        GT3_RXUSRCLK_IN                 =>      gt3_txusrclk_i,
        GT3_RXUSRCLK2_IN                =>      gt3_txusrclk_i,
        ------------------ Receive Ports - FPGA RX interface Ports -----------------
        GT3_RXDATA_OUT                  =>      gt3_rxdata_i,
        ------------------------ Receive Ports - RX AFE Ports ----------------------
        GT3_GTHRXN_IN                   =>      RXN_IN(3),
        --------------------- Receive Ports - RX Equalizer Ports -------------------
        GT3_RXMONITOROUT_OUT            =>      gt3_rxmonitorout_i,
        GT3_RXMONITORSEL_IN             =>      gt3_rxmonitorsel_i,
        ------------ Receive Ports - RX Fabric ClocK Output Control Ports ----------
        GT3_RXRATEDONE_OUT              =>      gt3_rxratedone_i,
        GT3_RXOUTCLK_OUT                =>      gt3_rxoutclk_i,
        ------------- Receive Ports - RX Initialization and Reset Ports ------------
        GT3_GTRXRESET_IN                =>      gt3_gtrxreset_i,
        ------------------------ Receive Ports -RX AFE Ports -----------------------
        GT3_GTHRXP_IN                   =>      RXP_IN(3),
        -------------- Receive Ports -RX Initialization and Reset Ports ------------
        GT3_RXRESETDONE_OUT             =>      gt3_rxresetdone_i,
        ------------------------ TX Configurable Driver Ports ----------------------
        GT3_TXPOSTCURSOR_IN             =>      gt3_txpostcursor_i,
        GT3_TXPRECURSOR_IN              =>      gt3_txprecursor_i,
        --------------------- TX Initialization and Reset Ports --------------------
        GT3_GTTXRESET_IN                =>      gt3_gttxreset_i,
        GT3_TXUSERRDY_IN                =>      gt3_txuserrdy_i,
        ------------------ Transmit Ports - FPGA TX Interface Ports ----------------
        GT3_TXUSRCLK_IN                 =>      gt3_txusrclk_i,
        GT3_TXUSRCLK2_IN                =>      gt3_txusrclk_i,
        --------------------- Transmit Ports - PCI Express Ports -------------------
        GT3_TXRATE_IN                   =>      gt3_txrate_i,
        --------------- Transmit Ports - TX Configurable Driver Ports --------------
        GT3_TXDIFFCTRL_IN               =>      gt3_txdiffctrl_i,
        ------------------ Transmit Ports - TX Data Path interface -----------------
        GT3_TXDATA_IN                   =>      gt3_rxdata_i,
        ---------------- Transmit Ports - TX Driver and OOB signaling --------------
        GT3_GTHTXN_OUT                  =>      TXN_OUT(3),
        GT3_GTHTXP_OUT                  =>      TXP_OUT(3),
        ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        GT3_TXOUTCLK_OUT                =>      gt3_txoutclk_i,
        GT3_TXOUTCLKFABRIC_OUT          =>      gt3_txoutclkfabric_i,
        GT3_TXOUTCLKPCS_OUT             =>      gt3_txoutclkpcs_i,
        GT3_TXRATEDONE_OUT              =>      gt3_txratedone_i,
        ------------- Transmit Ports - TX Initialization and Reset Ports -----------
        GT3_TXRESETDONE_OUT             =>      gt3_txresetdone_i,
        GT3_TXPIPPMSTEPSIZE_IN          =>      gt3_txpippmstepsize_i,
    --____________________________COMMON PORTS________________________________
        ---------------------- Common Block  - Ref Clock Ports ---------------------
        GT0_GTREFCLK0_COMMON_IN         =>      q0_clk1_refclk_i,
        ------------------------- Common Block - QPLL Ports ------------------------
        GT0_QPLLLOCK_OUT                =>      gt0_qplllock_i,
        GT0_QPLLLOCKDETCLK_IN           =>      drpclk_in_i,
        GT0_QPLLRESET_IN                =>      gt0_qpllreset_i
    );


--------------------------------------------------------------------------------------
------------------ PICXO -------------------------------------------------------------
--------------------------------------------------------------------------------------
bufg_rxoutclk0: bufg port map (i=> gt0_rxoutclk_i, o => gt0_rxoutclk_bufg);
bufg_rxoutclk1: bufg port map (i=> gt1_rxoutclk_i, o => gt1_rxoutclk_bufg);
bufg_rxoutclk2: bufg port map (i=> gt2_rxoutclk_i, o => gt2_rxoutclk_bufg);
bufg_rxoutclk3: bufg port map (i=> gt3_rxoutclk_i, o => gt3_rxoutclk_bufg);

 <=: $ComponentName :>_0 : <=: $ComponentName :>
     PORT MAP (
          REF_CLK_I        => gt0_rxoutclk_bufg         ,
          RESET_I          => picxo_rst0(7)             ,
          DRPEN_O          => open                      ,
          DRPWEN_O         => open                      ,
          DRPRDY_I         => '0'                       ,
          DRPDO_I          => X"0000"                   ,
          DRPDATA_O        => open                      ,
          DRPADDR_O        => open                      ,
          DRPBUSY_O        => open                      ,
          TXOUTCLK_I       => gt0_txusrclk_i            ,
          RSIGCE_I         => '1'                       ,
          VSIGCE_I         => '1'                       ,
          VSIGCE_O         => open                      ,
          ACC_STEP         => acc_step                  ,
          G1               => G1                        ,
          G2               => G2                        ,
          R                => R                         ,
          V                => V                         ,
          C_I              => C                         ,
          P_I              => P                         ,
          N_I              => N                         ,
          DON_I            => don                       ,
          OFFSET_PPM       => Offset_ppm                ,
          OFFSET_EN        => Offset_en                 ,
          HOLD             => hold                      ,
          CE_DSP_RATE      => ce_dsp_rate               ,
          --DRP USER PORT
          DRP_USER_REQ_I   => '0'                       ,
          DRP_USER_DONE_I  => '0'                       ,
          DRPEN_USER_I     => '0'                       ,
          DRPWEN_USER_I    => '0'                       ,
          DRPDATA_USER_I   => (others=>'0')             ,
          DRPDATA_USER_O   => open                      ,
          DRPADDR_USER_I   => (others=>'0')             ,
          DRPRDY_USER_O    => open                      ,
          ACC_DATA         => gt0_txpippmstepsize_i     ,
          --DEBUG PORT
          ERROR_O          => gt0_error_o               ,
          VOLT_O           => gt0_volt_o                ,
          DRPDATA_SHORT_O  => open                      ,
          CE_PI_O          => gt0_ce_pi_o               ,
          CE_PI2_O         => gt0_ce_pi2_o              ,
          CE_DSP_O         => gt0_ce_dsp_o              ,
          OVF_PD           => gt0_ovf_pd                ,
          OVF_AB           => gt0_ovf_ab                ,
          OVF_VOLT         => gt0_ovf_volt              ,
          OVF_INT          => gt0_ovf_int               
        );      

        ------------------ PICXO -------------------------------------------------------------
        --------------------------------------------------------------------------------------
        
<=: $ComponentName :>_1 : <=: $ComponentName :>
        PORT MAP (
             REF_CLK_I        => gt1_rxoutclk_bufg         ,
             RESET_I          => picxo_rst1(7)             ,
             DRPEN_O          => open                      ,
             DRPWEN_O         => open                      ,
             DRPRDY_I         => '0'                       ,
             DRPDO_I          => X"0000"                   ,
             DRPDATA_O        => open                      ,
             DRPADDR_O        => open                      ,
             DRPBUSY_O        => open                      ,
             TXOUTCLK_I       => gt1_txusrclk_i            ,
             RSIGCE_I         => '1'                       ,
             VSIGCE_I         => '1'                       ,
             VSIGCE_O         => open                      ,
             ACC_STEP         => acc_step                  ,
             G1               => G1                        ,
             G2               => G2                        ,
             R                => R                         ,
             V                => V                         ,
             C_I              => C                         ,
             P_I              => P                         ,
             N_I              => N                         ,
             DON_I            => don                       ,
             OFFSET_PPM       => Offset_ppm                ,
             OFFSET_EN        => Offset_en                 ,
             HOLD             => hold                      ,
             CE_DSP_RATE      => ce_dsp_rate               ,
             --DRP USER PORT
             DRP_USER_REQ_I   => '0'                       ,
             DRP_USER_DONE_I  => '0'                       ,
             DRPEN_USER_I     => '0'                       ,
             DRPWEN_USER_I    => '0'                       ,
             DRPDATA_USER_I   => (others=>'0')             ,
             DRPDATA_USER_O   => open                      ,
             DRPADDR_USER_I   => (others=>'0')             ,
             DRPRDY_USER_O    => open                      ,
             ACC_DATA         => gt1_txpippmstepsize_i     ,
             --DEBUG PORT
             ERROR_O          => gt1_ila_in_i(20 downto 0) ,
             VOLT_O           => gt1_ila_in_i(42 downto 21),
             DRPDATA_SHORT_O  => open                      ,
             CE_PI_O          => gt1_ila_in_i(51)          ,
             CE_PI2_O         => gt1_ila_in_i(52)          ,
             CE_DSP_O         => gt1_ila_in_i(53)          ,
             OVF_PD           => gt1_ila_in_i(54)          ,
             OVF_AB           => gt1_ila_in_i(55)          ,
             OVF_VOLT         => gt1_ila_in_i(56)          ,
             OVF_INT          => gt1_ila_in_i(57)          
           );     
           
           
<=: $ComponentName :>_2 : <=: $ComponentName :>
           PORT MAP (
                REF_CLK_I        => gt2_rxoutclk_bufg         ,
                RESET_I          => picxo_rst2(7)             ,
                DRPEN_O          => open                      ,
                DRPWEN_O         => open                      ,
                DRPRDY_I         => '0'                       ,
                DRPDO_I          => X"0000"                   ,
                DRPDATA_O        => open                      ,
                DRPADDR_O        => open                      ,
                DRPBUSY_O        => open                      ,
                TXOUTCLK_I       => gt2_txusrclk_i            ,
                RSIGCE_I         => '1'                       ,
                VSIGCE_I         => '1'                       ,
                VSIGCE_O         => open                      ,
                ACC_STEP         => acc_step                  ,
                G1               => G1                        ,
                G2               => G2                        ,
                R                => R                         ,
                V                => V                         ,
                C_I              => C                         ,
                P_I              => P                         ,
                N_I              => N                         ,
                DON_I            => don                       ,
                OFFSET_PPM       => Offset_ppm                ,
                OFFSET_EN        => Offset_en                 ,
                HOLD             => hold                      ,
                CE_DSP_RATE      => ce_dsp_rate               ,
                --DRP USER PORT
                DRP_USER_REQ_I   => '0'                       ,
                DRP_USER_DONE_I  => '0'                       ,
                DRPEN_USER_I     => '0'                       ,
                DRPWEN_USER_I    => '0'                       ,
                DRPDATA_USER_I   => (others=>'0')             ,
                DRPDATA_USER_O   => open                      ,
                DRPADDR_USER_I   => (others=>'0')             ,
                DRPRDY_USER_O    => open                      ,
                ACC_DATA         => gt2_txpippmstepsize_i     ,
                --DEBUG PORT
                ERROR_O          => gt2_ila_in_i(20 downto 0) ,
                VOLT_O           => gt2_ila_in_i(42 downto 21),
                DRPDATA_SHORT_O  => open                      ,
                CE_PI_O          => gt2_ila_in_i(51)          ,
                CE_PI2_O         => gt2_ila_in_i(52)          ,
                CE_DSP_O         => gt2_ila_in_i(53)          ,
                OVF_PD           => gt2_ila_in_i(54)          ,
                OVF_AB           => gt2_ila_in_i(55)          ,
                OVF_VOLT         => gt2_ila_in_i(56)          ,
                OVF_INT          => gt2_ila_in_i(57)           
              );     
              
<=: $ComponentName :>_3 : <=: $ComponentName :>
           PORT MAP (
                REF_CLK_I        => gt3_rxoutclk_bufg         ,
                RESET_I          => picxo_rst3(7)             ,
                DRPEN_O          => open                      ,
                DRPWEN_O         => open                      ,
                DRPRDY_I         => '0'                       ,
                DRPDO_I          => X"0000"                   ,
                DRPDATA_O        => open                      ,
                DRPADDR_O        => open                      ,
                DRPBUSY_O        => open                      ,
                TXOUTCLK_I       => gt3_txusrclk_i            ,
                RSIGCE_I         => '1'                       ,
                VSIGCE_I         => '1'                       ,
                VSIGCE_O         => open                      ,
                ACC_STEP         => acc_step                  ,
                G1               => G1                        ,
                G2               => G2                        ,
                R                => R                         ,
                V                => V                         ,
                C_I              => C                         ,
                P_I              => P                         ,
                N_I              => N                         ,
                DON_I            => don                       ,
                OFFSET_PPM       => Offset_ppm                ,
                OFFSET_EN        => Offset_en                 ,
                HOLD             => hold                      ,
                CE_DSP_RATE      => ce_dsp_rate               ,
                --DRP USER PORT
                DRP_USER_REQ_I   => '0'                       ,
                DRP_USER_DONE_I  => '0'                       ,
                DRPEN_USER_I     => '0'                       ,
                DRPWEN_USER_I    => '0'                       ,
                DRPDATA_USER_I   => (others=>'0')             ,
                DRPDATA_USER_O   => open                      ,
                DRPADDR_USER_I   => (others=>'0')             ,
                DRPRDY_USER_O    => open                      ,
                ACC_DATA         => gt3_txpippmstepsize_i     ,
                --DEBUG PORT
                ERROR_O          => gt3_ila_in_i(20 downto 0) ,
                VOLT_O           => gt3_ila_in_i(42 downto 21),
                DRPDATA_SHORT_O  => open                      ,
                CE_PI_O          => gt3_ila_in_i(51)          ,
                CE_PI2_O         => gt3_ila_in_i(52)          ,
                CE_DSP_O         => gt3_ila_in_i(53)          ,
                OVF_PD           => gt3_ila_in_i(54)          ,
                OVF_AB           => gt3_ila_in_i(55)          ,
                OVF_VOLT         => gt3_ila_in_i(56)          ,
                OVF_INT          => gt3_ila_in_i(57)           
              );                                               
-------------------------------------------------------------------------------
-- Si5324 control 
--
-- The Si5324 on the VC709 provides the GTX TX reference clock.
--
sictrl_gen : if SI5324_REFCLK = 1 generate
Si5324CTRL : vc709_Si5324_ctrl
port map (
    uart_rx             => uart_rx,
    uart_tx             => uart_tx,
    clk200              => sys_clk,
    cpu_rst             => '0',
    i2c_clk             => i2c_clk,
    i2c_data            => i2c_data,
    i2c_mux_reset_b     => i2c_mux_reset_b,
    si5324_freq_sel_ip  => si5324_freq_sel_ip,
    si5324_rst_n        => si5324_rst_n

);
end generate;
--     
    process (gt0_txusrclk_i, picxo_rst0, gt0_gttxreset_i)
    begin
       if(picxo_rst0(0) = '1' or gt0_gttxreset_i ='1') then
            picxo_rst0 (7 downto 1)     <= "1111111";
       elsif rising_edge (gt0_txusrclk_i) then
            picxo_rst0 (7 downto 1)     <=  picxo_rst0(6 downto 0);
    end if;
    end process;   
    
    process (gt1_txusrclk_i, picxo_rst1, gt1_gttxreset_i)
    begin
       if(picxo_rst1(0) = '1' or gt1_gttxreset_i ='1') then
            picxo_rst1 (7 downto 1)     <= "1111111";
       elsif rising_edge (gt1_txusrclk_i) then
            picxo_rst1 (7 downto 1)     <=  picxo_rst1(6 downto 0);
    end if;
    end process;  
    
    process (gt2_txusrclk_i, picxo_rst2, gt2_gttxreset_i)
    begin
       if(picxo_rst2(0) = '1' or gt2_gttxreset_i ='1') then
            picxo_rst2 (7 downto 1)     <= "1111111";
       elsif rising_edge (gt2_txusrclk_i) then
            picxo_rst2 (7 downto 1)     <=  picxo_rst2(6 downto 0);
    end if;
    end process;      
    
    process (gt3_txusrclk_i, picxo_rst3, gt3_gttxreset_i)
    begin
       if(picxo_rst3(0) = '1' or gt3_gttxreset_i ='1') then
            picxo_rst3 (7 downto 1)     <= "1111111";
       elsif rising_edge (gt3_txusrclk_i) then
            picxo_rst3 (7 downto 1)     <=  picxo_rst3(6 downto 0);
    end if;
    end process;      
    
    gt0_gtrxreset_i                              <= gtrxreset_i or not gt0_qplllock_i;
    gt0_gttxreset_i                              <= gttxreset_i or not gt0_qplllock_i;
    gt0_qpllreset_i                              <= qpllreset_i;
    
    gt1_gtrxreset_i                              <= gtrxreset_i or not gt0_qplllock_i;
    gt1_gttxreset_i                              <= gttxreset_i or not gt0_qplllock_i;
   
    gt2_gtrxreset_i                              <= gtrxreset_i or not gt0_qplllock_i;
    gt2_gttxreset_i                              <= gttxreset_i or not gt0_qplllock_i;
   
    gt3_gtrxreset_i                              <= gtrxreset_i or not gt0_qplllock_i;
    gt3_gttxreset_i                              <= gttxreset_i or not gt0_qplllock_i;
   
                                    
----------------------------- Chipscope Connections -----------------------
    -- When the example design is run in hardware, it uses chipscope to allow the
    -- example design and GT wrapper to be controlled and monitored. The 
    -- EXAMPLE_USE_SCOPE parameter allows chipscope to be removed for simulation.

debug : if EXAMPLE_USE_SCOPE = 1 generate
    
    gt0_txoutclk_i <= gt0_txoutclk_i_nophase ;
       
--  PICXCO ILA

picxo_ila_0 : picxo_ila
  PORT MAP (
    clk         => gt0_txusrclk_i        ,
    probe0      => gt0_error_o           ,
    probe1      => gt0_volt_o            ,
    probe2      => (others=>'0')         ,
    probe3(0)   => gt0_ce_pi_o           ,
    probe4(0)   => gt0_ce_pi2_o          ,
    probe5(0)   => gt0_ce_dsp_o          , 
    probe6(0)   => gt0_ovf_pd            , 
    probe7(0)   => gt0_ovf_ab            ,
    probe8(0)   => gt0_ovf_volt          ,
    probe9(0)   => gt0_ovf_int       
  );
picxo_ila_1 : picxo_ila
  PORT MAP (
    clk         => gt1_txusrclk_i        ,
    probe0      => gt1_error_o           ,
    probe1      => gt1_volt_o            ,
    probe2      => (others=>'0')         ,
    probe3(0)   => gt1_ce_pi_o           ,
    probe4(0)   => gt1_ce_pi2_o          ,
    probe5(0)   => gt1_ce_dsp_o          , 
    probe6(0)   => gt1_ovf_pd            , 
    probe7(0)   => gt1_ovf_ab            ,
    probe8(0)   => gt1_ovf_volt          ,
    probe9(0)   => gt1_ovf_int       
  );

picxo_ila_2 : picxo_ila
  PORT MAP (
    clk         => gt2_txusrclk_i            ,
    probe0      => gt2_error_o               ,
    probe1      => gt2_volt_o                ,
    probe2      => (others=>'0')             ,
    probe3(0)   => gt2_ce_pi_o               ,
    probe4(0)   => gt2_ce_pi2_o              ,
    probe5(0)   => gt2_ce_dsp_o              , 
    probe6(0)   => gt2_ovf_pd                , 
    probe7(0)   => gt2_ovf_ab                ,
    probe8(0)   => gt2_ovf_volt              ,
    probe9(0)   => gt2_ovf_int       
  );

picxo_ila_3 : picxo_ila
  PORT MAP (
    clk         => gt3_txusrclk_i            ,
    probe0      => gt3_error_o               ,
    probe1      => gt3_volt_o                ,
    probe2      => (others=>'0')             ,
    probe3(0)   => gt3_ce_pi_o               ,
    probe4(0)   => gt3_ce_pi2_o              ,
    probe5(0)   => gt3_ce_dsp_o              , 
    probe6(0)   => gt3_ovf_pd                , 
    probe7(0)   => gt3_ovf_ab                ,
    probe8(0)   => gt3_ovf_volt              ,
    probe9(0)   => gt3_ovf_int       
  );             
             
  picxo_vio_i : picxo_vio
  PORT MAP (
    clk            => gt0_txusrclk_i  ,
    probe_out0     => G1 (4 downto 0) ,
    probe_out1     => G2 (4 downto 0) ,
    probe_out2     => R               ,
    probe_out3     => V               ,
    probe_out4     => acc_step        ,
    probe_out5     => ce_dsp_rate     ,
    probe_out6     => Offset_ppm      ,
    probe_out7(0)  => Offset_en       ,
    probe_out8(0)  => hold            ,
    probe_out9(0)  => picxo_rst0(0)   ,
    probe_out10(0) => cpllreset_i     ,
    probe_out11    => don     
  );                                
    

--   Shared VIO for all transievers 
     shared_vio_i : data_vio
     port map(
             clk          =>  sys_clk,
             PROBE_IN0    =>  shared_vio_in_i,
             PROBE_OUT0   =>  shared_vio_out_i,
             PROBE_IN1    =>  tied_to_ground_vec_i(31 downto 0),
             PROBE_OUT1   =>  open
             );
    
--   TX VIO 
     tx_data_vio_i : data_vio
     port map(
             clk          =>  gt0_txusrclk_i,
             PROBE_IN0    =>  tx_data_vio_async_in_i,
             PROBE_OUT0   =>  tx_data_vio_async_out_i,
             PROBE_IN1    =>  tx_data_vio_sync_in_i,
             PROBE_OUT1   =>  tx_data_vio_sync_out_i
             );
    
--    RX VIO 
     rx_data_vio_i : data_vio
     port map(
             clk         =>  gt0_txusrclk_i,
             PROBE_IN0   =>  rx_data_vio_async_in_i,
             PROBE_OUT0  =>  rx_data_vio_async_out_i,
             PROBE_IN1   =>  rx_data_vio_sync_in_i,
             PROBE_OUT1  =>  rx_data_vio_sync_out_i
             );

    rsigce           <= '1';
    vsigce           <= '1';

    -- Shared VIO Outputs
    gttxreset_i                                  <= shared_vio_out_i(31);
    gtrxreset_i                                  <= shared_vio_out_i(30);
    user_tx_reset_i                              <= shared_vio_out_i(29);
    user_rx_reset_i                              <= shared_vio_out_i(28);
    qpllreset_i                                  <= shared_vio_out_i(27);
    soft_reset_i                                 <= shared_vio_out_i(26);

    si5324_freq_sel_ip                           <= shared_vio_out_i(15 downto 8);
   
    SFP_RS1_OUT(0)                               <= shared_vio_out_i(2);
    SFP_RS0_OUT(0)                               <= shared_vio_out_i(1);
    SFP_TX_DISABLE_OUT(0)                        <= shared_vio_out_i(0);    
    SFP_RS1_OUT(1)                               <= shared_vio_out_i(2);
    SFP_RS0_OUT(1)                               <= shared_vio_out_i(1);
    SFP_TX_DISABLE_OUT(1)                        <= shared_vio_out_i(0);
    SFP_RS1_OUT(2)                               <= shared_vio_out_i(2);
    SFP_RS0_OUT(2)                               <= shared_vio_out_i(1);
    SFP_TX_DISABLE_OUT(2)                        <= shared_vio_out_i(0);
    SFP_RS1_OUT(3)                               <= shared_vio_out_i(2);
    SFP_RS0_OUT(3)                               <= shared_vio_out_i(1);
    SFP_TX_DISABLE_OUT(3)                        <= shared_vio_out_i(0);

    -- Shared VIO Inputs
    shared_vio_in_i(31 downto 13)                 <= (others => '0');
    

    shared_vio_in_i(12)                          <= SFP_TX_FAULT_IN(3);
    shared_vio_in_i(11)                          <= SFP_MOD_DETECT_IN(3);
    shared_vio_in_i(10)                          <= SFP_LOS_IN(3);
     shared_vio_in_i(9)                           <= SFP_TX_FAULT_IN(2);
    shared_vio_in_i(8)                           <= SFP_MOD_DETECT_IN(2);
    shared_vio_in_i(7)                           <= SFP_LOS_IN(2);   
    shared_vio_in_i(6)                           <= SFP_TX_FAULT_IN(1);
    shared_vio_in_i(5)                           <= SFP_MOD_DETECT_IN(1);
    shared_vio_in_i(4)                           <= SFP_LOS_IN(1);
    shared_vio_in_i(3)                           <= gt0_qplllock_i;
    shared_vio_in_i(2)                           <= SFP_TX_FAULT_IN(0);
    shared_vio_in_i(1)                           <= SFP_MOD_DETECT_IN(0);
    shared_vio_in_i(0)                           <= SFP_LOS_IN(0);     
     
    -- Chipscope connections on GT 0
    gt0_tx_data_vio_async_in_i(31 downto 4)      <= (others => '0');
    gt0_tx_data_vio_async_in_i(3)                <= gt3_txfsmresetdone_i ;
    gt0_tx_data_vio_async_in_i(2)                <= gt2_txfsmresetdone_i ;
    gt0_tx_data_vio_async_in_i(1)                <= gt1_txfsmresetdone_i ;
    gt0_tx_data_vio_async_in_i(0)                <= gt0_txfsmresetdone_i ;
     
    gt0_tx_data_vio_sync_in_i(31)                <= gt0_txresetdone_i    ;
    gt0_tx_data_vio_sync_in_i(30)                <= gt1_txresetdone_i    ;
    gt0_tx_data_vio_sync_in_i(29)                <= gt2_txresetdone_i    ;
    gt0_tx_data_vio_sync_in_i(28)                <= gt3_txresetdone_i    ;
    gt0_tx_data_vio_sync_in_i(27 downto 0)       <= (others => '0')      ;
    
    gt0_txprecursor_i                            <= tx_data_vio_async_out_i(31 downto 27);
    gt0_txpostcursor_i                           <= tx_data_vio_async_out_i(26 downto 22);
    gt1_txprecursor_i                            <= tx_data_vio_async_out_i(31 downto 27);
    gt1_txpostcursor_i                           <= tx_data_vio_async_out_i(26 downto 22);
    gt2_txprecursor_i                            <= tx_data_vio_async_out_i(31 downto 27);
    gt2_txpostcursor_i                           <= tx_data_vio_async_out_i(26 downto 22);
    gt3_txprecursor_i                            <= tx_data_vio_async_out_i(31 downto 27);
    gt3_txpostcursor_i                           <= tx_data_vio_async_out_i(26 downto 22);
    
    gt0_txuserrdy_i                              <= tx_data_vio_sync_out_i(31);
    gt1_txuserrdy_i                              <= tx_data_vio_sync_out_i(31);
    gt2_txuserrdy_i                              <= tx_data_vio_sync_out_i(31);
    gt3_txuserrdy_i                              <= tx_data_vio_sync_out_i(31);
    
    gt0_txdiffctrl_i                             <= tx_data_vio_sync_out_i(30 downto 27);
    gt1_txdiffctrl_i                             <= tx_data_vio_sync_out_i(30 downto 27);
    gt2_txdiffctrl_i                             <= tx_data_vio_sync_out_i(30 downto 27);
    gt3_txdiffctrl_i                             <= tx_data_vio_sync_out_i(30 downto 27);
    gt0_txrate_i                                 <= tx_data_vio_sync_out_i(26 downto 24);
    gt1_txrate_i                                 <= tx_data_vio_sync_out_i(26 downto 24);
    gt2_txrate_i                                 <= tx_data_vio_sync_out_i(26 downto 24);
    gt3_txrate_i                                 <= tx_data_vio_sync_out_i(26 downto 24);
     
    gt0_rx_data_vio_async_in_i(31 downto 4)      <= (others => '0') ;
    gt0_rx_data_vio_async_in_i(0)                <= gt0_rxfsmresetdone_i;
    gt0_rx_data_vio_async_in_i(1)                <= gt1_rxfsmresetdone_i;
    gt0_rx_data_vio_async_in_i(2)                <= gt2_rxfsmresetdone_i;
    gt0_rx_data_vio_async_in_i(3)                <= gt3_rxfsmresetdone_i;
     
    gt0_rx_data_vio_sync_in_i(31)                <= gt0_rxresetdone_i;
    gt0_rx_data_vio_sync_in_i(30)                <= gt1_rxresetdone_i;
    gt0_rx_data_vio_sync_in_i(29)                <= gt2_rxresetdone_i;
    gt0_rx_data_vio_sync_in_i(28)                <= gt3_rxresetdone_i;

    gt0_rx_data_vio_sync_in_i(27 downto 0)       <= (others => '0') ;
    gt0_rxuserrdy_i                              <= rx_data_vio_async_out_i(31);
    gt1_rxuserrdy_i                              <= rx_data_vio_async_out_i(31);
    gt2_rxuserrdy_i                              <= rx_data_vio_async_out_i(31);
    gt3_rxuserrdy_i                              <= rx_data_vio_async_out_i(31);
    
    gt0_rxrate_i                                 <= rx_data_vio_sync_out_i(31 downto 29);
    gt1_rxrate_i                                 <= rx_data_vio_sync_out_i(31 downto 29);
    gt2_rxrate_i                                 <= rx_data_vio_sync_out_i(31 downto 29);
    gt3_rxrate_i                                 <= rx_data_vio_sync_out_i(31 downto 29);


    tx_data_vio_async_in_i              <=      gt0_tx_data_vio_async_in_i;

    tx_data_vio_sync_in_i               <=      gt0_tx_data_vio_sync_in_i;


    rx_data_vio_async_in_i              <=      gt0_rx_data_vio_async_in_i;

    rx_data_vio_sync_in_i               <=      gt0_rx_data_vio_sync_in_i;

    C<= (others =>'0');
    P<= (others =>'0');
    N<= (others =>'0');
    gt0_ila_in_i(50 downto 43) <= (others =>'0');
    gt1_ila_in_i(50 downto 43) <= (others =>'0');
    gt2_ila_in_i(50 downto 43) <= (others =>'0');
    gt3_ila_in_i(50 downto 43) <= (others =>'0');

end generate debug;

no_debug : if EXAMPLE_USE_SCOPE = 0 generate
gt0_txoutclk_i <= gt0_txoutclk_i_nophase;


    R             <= R_i ;
    V             <= V_i ;
    G1            <= G1_i;
    G2            <= G2_i;
    C             <= C_i;
    N             <= N_i;
    P             <= P_i;
    don           <= don_i;
    ce_dsp_rate   <= ce_dsp_rate_i  ;
    acc_step      <= acc_step_i   ;
    Offset_ppm    <= Offset_ppm_i ;
    Offset_en     <= Offset_en_i  ;
    hold          <= hold_i       ;
    picxo_rst0(0) <= '0'    ;
    picxo_rst1(0) <= '0'    ;
    picxo_rst2(0) <= '0'    ;
    picxo_rst3(0) <= '0'    ;
   

    rsigce        <= rsigce_i;
    vsigce        <= vsigce_i;
    qpllreset_i   <= QPLL_RESET_IN;
    
    gttxreset_i             <= tied_to_ground_i;
    gtrxreset_i             <= tied_to_ground_i;
    user_tx_reset_i         <= tied_to_ground_i;
    user_rx_reset_i         <= tied_to_ground_i;
    gt0_txprecursor_i       <= tied_to_ground_vec_i(4 downto 0);
    gt0_txpostcursor_i      <= tied_to_ground_vec_i(4 downto 0);
    gt0_txdiffctrl_i        <= tied_to_ground_vec_i(3 downto 0);
    gt0_txrate_i            <= tied_to_ground_vec_i(2 downto 0);
    gt0_rxrate_i            <= tied_to_ground_vec_i(2 downto 0);

    SFP_RS1_OUT(0)          <= '1';
    SFP_RS0_OUT(0)          <= '1';
    SFP_TX_DISABLE_OUT(0)   <= '1';
     
end generate no_debug;
end RTL;









